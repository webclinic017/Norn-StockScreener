{"version":3,"sources":["webpack:///./src/components/monteCarloChart.js","webpack:///./src/common/stockPriceSimulationDef.js","webpack:///./src/components/stock-price-simulation/StockPriceSimulation.js","webpack:///./src/pages/stock-price-simulation.js","webpack:///./node_modules/@mui/icons-material/Info.js","webpack:///./src/components/stock-price-simulation/StockPriceSimulation.module.scss"],"names":["CustomizedLabel","render","this","props","x","y","stroke","value","fontSize","dy","fill","textAnchor","PureComponent","MonteCarloChart","data","iteration","info","show_mean_label","modal_mode","dataLines","Array","map","index","key","shortid","generate","type","dataKey","String","padStart","dot","strokeWidth","optionReferenceLines","strike","label","position","strokeDasharray","cost","xAxisLabel","symbol","offset","chartStyle","width","window","innerWidth","height","innerHeight","maxWidth","maxHeight","style","margin","top","right","left","bottom","domain","itemSorter","item","name","Query_Def","parameters","display_name","val","gridsm","min","max","ParameterNodesField","queryParameterRef","queryParameterCurrentRef","inputRef","Grid","md","xs","noValidate","autoComplete","TextField","id","className","StockPriceSimulationStyle","valueText","variant","defaultValue","size","genParameterField","current","FetchNornFinanceAPIServer","FetchNornFinanceAPIServerRef","useFetchNornFinanceAPIServer","useFetch","NornFinanceAPIServerDomain","cachePolicy","server","MonteCarloChartComp","MonteCarloChartCompRef","useState","chart","setChart","StockPriceSimulation","loadingAnimeRef","modalWindowRef","useRef","popModalWindow","popPureModal","forEach","createRef","useEffect","setLoading","commonStyle","defaultFont","container","queryPannel","parameterTitle","Typography","gutterBottom","component","arrow","title","whiteSpace","lineHeight","textAlign","QueryNote","IconButton","onClick","open","NornFinanceAPIServerGithub","color","parameterBlock","spacing","Box","display","justifyContent","ThemeProvider","theme","createTheme","palette","primary","blue","Button","isMobile","queryBtnMobile","queryBtn","startIcon","args","reduce","accumulator","currentValue","currentIndex","push","console","log","some","element","query_string","Object","keys","join","Promise","all","GetDataByFetchObj","then","allResponses","length","chartData","sim_count","mean_point","mean_index","d","parseInt","data_points","data_i","error","catch","StockPriceSimulationPage","getLoading","StylesProvider","injectFirst","_interopRequireDefault","defineProperty","exports","default","_createSvgIcon","_jsxRuntime","_default","jsx","module"],"mappings":"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","file":"component---src-pages-stock-price-simulation-js-60107e365963f6394c9c.js","sourcesContent":["import React, { PureComponent } from 'react'\r\nimport shortid from 'shortid'\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  Label,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ReferenceLine,\r\n  ResponsiveContainer\r\n} from 'recharts'\r\n\r\n\r\nclass CustomizedLabel extends PureComponent {\r\n  render() {\r\n    const { x, y, stroke, value, fontSize } = this.props;\r\n\r\n    return (\r\n      <text x={x} y={y} dy={-4} fill={stroke} fontSize={fontSize} textAnchor=\"middle\">\r\n        {value}\r\n      </text>\r\n    );\r\n  }\r\n}\r\n\r\nconst MonteCarloChart = ({ data, iteration, info, show_mean_label=true, modal_mode=true }) => {\r\n\r\n  const dataLines = Array(iteration).fill(0).map((value, index) => {\r\n    return <Line key={shortid.generate()}  type=\"monotone\" dataKey={'Path-'+String(index).padStart(2, '0')} stroke={'#d3d3d3'} dot={false} strokeWidth={2}/>\r\n  })\r\n  // console.log(dataLines)\r\n  const optionReferenceLines = \"strike\" in info && \"cost\" in info ? \r\n  <>          \r\n    <ReferenceLine y={info.strike} label={{ position: 'insideBottomLeft',  value: 'Strike: ' + info.strike, fill: 'red', fontSize: 14 }} stroke=\"red\" strokeDasharray=\"3 3\" />\r\n    <ReferenceLine y={info.cost} label={{ position: 'insideTopLeft',  value: 'Cost: ' + info.cost, fill: 'blue', fontSize: 14 }} stroke=\"blue\" strokeDasharray=\"3 3\" />\r\n  </> : <></>\r\n\r\n  const xAxisLabel = \"symbol\" in info ? \r\n  <Label value={\"Symbol: \" + info.symbol} offset={5} position=\"bottom\" fill='#8884d8' fontSize={16} /> : <></>\r\n\r\n  const chartStyle = modal_mode ? { width: (window.innerWidth - 100) + 'px', height: (window.innerHeight - 100) + 'px', maxWidth: '1200px', maxHeight: '600px' } : {width: '100%', height: '100%'}\r\n\r\n  return (\r\n    <div style={chartStyle}>\r\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n        <LineChart\r\n          data={data}\r\n          margin={{\r\n            top: 5,\r\n            right: 30,\r\n            left: 20,\r\n            bottom: 20,\r\n          }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"Name\">\r\n            {xAxisLabel}\r\n          </XAxis>\r\n          <YAxis domain={['auto', 'auto']} />\r\n          <Tooltip itemSorter={item => item.name}/>\r\n          {dataLines}\r\n          <Line type=\"monotone\" dataKey=\"Mean\" stroke=\"#FF8042\" strokeWidth={3} label={show_mean_label ? <CustomizedLabel stroke={\"#FF8042\"} fontSize={14}/> : <></>} />\r\n          {optionReferenceLines}\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default MonteCarloChart\r\n","\r\nexport const Query_Def = {\r\n    parameters: [\r\n      {\r\n        name: \"symbol\",\r\n        display_name: \"Symbol\",\r\n        val: \"THO\",\r\n        gridsm: 1,\r\n      },\r\n      {\r\n        name: \"days\",\r\n        display_name: \"Simulation Days\",\r\n        val: \"30\",\r\n        min: 1,\r\n        max: 252,\r\n        gridsm: 1,\r\n      },\r\n      {\r\n        name: \"iteration\",\r\n        display_name: \"Iteration\",\r\n        val: \"50\",\r\n        min: 1,\r\n        max: 100,\r\n        gridsm: 1,\r\n      },\r\n      {\r\n        name: \"ewma_his_vol_period\",\r\n        display_name: \"EWMA History Volatility Period\",\r\n        val: \"21\",\r\n        gridsm: 2,\r\n      },\r\n      {\r\n        name: \"ewma_his_vol_lambda\",\r\n        display_name: \"EWMA History Volatility Lambda\",\r\n        val: \"0.94\",\r\n        gridsm: 2,\r\n      },\r\n      {\r\n        name: \"mu\",\r\n        display_name: \"Expected Return (default: 1yr data)\",\r\n        val: \"\",\r\n        gridsm: 2,\r\n      },\r\n      {\r\n        name: \"vol\",\r\n        display_name: \"Volatility (default: EWMA Vol data)\",\r\n        val: \"\",\r\n        gridsm: 2,\r\n      },\r\n    ]\r\n  }\r\n  ","import React, { useState, useEffect, useRef, createRef } from 'react'\r\nimport SearchIcon from '@mui/icons-material/Search'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport InfoIcon from '@mui/icons-material/Info'\r\nimport TextField from '@mui/material/TextField'\r\nimport Button from '@mui/material/Button'\r\nimport Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport Typography from '@mui/material/Typography'\r\nimport { blue } from '@mui/material/colors'\r\nimport { createTheme } from '@mui/material/styles'\r\nimport { ThemeProvider } from '@mui/styles'\r\nimport shortid from 'shortid'\r\nimport useFetch from 'use-http'\r\nimport { isMobile } from 'react-device-detect'\r\n\r\nimport ModalWindow from '../modalWindow'\r\n\r\nimport { NoMaxWidthTooltip, GetDataByFetchObj } from '../../common/reactUtils'\r\nimport { Query_Def } from '../../common/stockPriceSimulationDef'\r\nimport { NornFinanceAPIServerDomain, QueryNote, NornFinanceAPIServerGithub } from '../../common/common'\r\nimport MonteCarloChart from '../monteCarloChart'\r\n\r\nimport commonStyle from '../common.module.scss'\r\nimport StockPriceSimulationStyle from './StockPriceSimulation.module.scss'\r\n\r\n// query parameter\r\nconst genParameterField = (inputRef, name, value, display_name, gridsm) => {\r\n  // add key to force re-render component\r\n  return (\r\n    <Grid item md={gridsm} xs={12} key={shortid.generate()}>\r\n      <form noValidate autoComplete=\"off\">\r\n        <TextField id={name} className={StockPriceSimulationStyle.valueText} label={display_name} variant=\"outlined\" defaultValue={value} size=\"small\" inputRef={inputRef} />\r\n      </form>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nconst ParameterNodesField = ({ queryParameterRef, queryParameterCurrentRef }) => {\r\n  return Query_Def.parameters.map((value, index) => {\r\n    return (\r\n      genParameterField(queryParameterRef.current[index], value.name, queryParameterCurrentRef.current === null ? value.val : queryParameterCurrentRef.current[index], value.display_name, value.gridsm)\r\n    )\r\n  })\r\n}\r\n\r\nconst FetchNornFinanceAPIServer = ({FetchNornFinanceAPIServerRef}) => {\r\n  const useFetchNornFinanceAPIServer = useFetch(\"https://\" + NornFinanceAPIServerDomain, { cachePolicy: 'no-cache' })\r\n  FetchNornFinanceAPIServerRef.current.server = useFetchNornFinanceAPIServer\r\n  return <></>\r\n}\r\n\r\nconst MonteCarloChartComp = ({MonteCarloChartCompRef}) => {\r\n  const [chart, setChart] = useState(<></>)\r\n  MonteCarloChartCompRef.current.setChart = setChart\r\n  return chart\r\n}\r\n\r\nconst StockPriceSimulation = ({loadingAnimeRef}) => {\r\n\r\n  const modalWindowRef = useRef({\r\n    popModalWindow: null,\r\n    popPureModal: null,\r\n  })\r\n  \r\n  const FetchNornFinanceAPIServerRef = useRef({\r\n    server: null\r\n  })\r\n\r\n  const MonteCarloChartCompRef  = useRef({\r\n    setChart: null\r\n  })\r\n\r\n  const [arg, setArg] = useState(0)\r\n\r\n  const queryParameterRef = useRef([])\r\n  Query_Def.parameters.forEach((value, index) => {\r\n    queryParameterRef.current[index] = createRef()\r\n    queryParameterRef.current[index].current = { value: value.val }\r\n  })\r\n  const queryParameterCurrentRef = useRef(null)\r\n  \r\n  useEffect(() => {\r\n    // componentDidMount is here!\r\n    // componentDidUpdate is here!\r\n    loadingAnimeRef.current.setLoading(false)\r\n    return () => {\r\n      // componentWillUnmount is here!\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <div className={commonStyle.defaultFont + ' ' + StockPriceSimulationStyle.container}>\r\n      <div className={StockPriceSimulationStyle.queryPannel}>\r\n        <div className={StockPriceSimulationStyle.parameterTitle}>\r\n          <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n            {'Query Parameters'}\r\n            <NoMaxWidthTooltip arrow title={<span style={{ whiteSpace: 'pre-line', lineHeight: '20px', textAlign: 'center'}}>{QueryNote}</span>} >\r\n              <IconButton onClick={() => window.open(NornFinanceAPIServerGithub, \"_blank\")}>\r\n                <InfoIcon color=\"action\"/>\r\n              </IconButton>\r\n            </NoMaxWidthTooltip>\r\n          </Typography>\r\n        </div>\r\n        <div className={StockPriceSimulationStyle.parameterBlock}>\r\n          <Grid container spacing={2}>\r\n            <ParameterNodesField queryParameterRef={queryParameterRef} queryParameterCurrentRef={queryParameterCurrentRef}/>\r\n            <Grid item md={1} xs={12} >\r\n              <Box display=\"flex\" justifyContent=\"flex-end\">\r\n                <ThemeProvider theme={createTheme({ palette: { primary: blue } })}>\r\n                  <Button className={isMobile ? StockPriceSimulationStyle.queryBtnMobile : StockPriceSimulationStyle.queryBtn} variant=\"contained\" color=\"primary\" startIcon={<SearchIcon />} onClick={() => {\r\n \r\n                    loadingAnimeRef.current.setLoading(true)\r\n                    queryParameterCurrentRef.current = []\r\n                    let args = Query_Def.parameters.reduce((accumulator, currentValue, currentIndex) => {\r\n                      accumulator[currentValue.name] = queryParameterRef.current[currentIndex].current.value\r\n                      queryParameterCurrentRef.current.push(accumulator[currentValue.name])\r\n                      return accumulator\r\n                    }, {})\r\n                    console.log(args)\r\n\r\n                    // check parameter\r\n                    function invalid_min_max(element) {  \r\n                      return ('min' in element && element['min'] > args[element['name']]) || ('max' in element && element['max'] < args[element['name']])\r\n                    } \r\n                    if (Query_Def.parameters.some(invalid_min_max)) {\r\n                      loadingAnimeRef.current.setLoading(false)\r\n                      modalWindowRef.current.popModalWindow(<div>The query parameter is not valid or overy limit.</div>)\r\n                      return\r\n                    }\r\n                   \r\n                    const query_string = '/stock/price-simulation-by-mc?' + Object.keys(args).map(function (key) { return args[key]!=\"\" ? key + \"=\" + args[key] : \"\" }).join(\"&\")\r\n                    Promise.all([\r\n                      GetDataByFetchObj(query_string, FetchNornFinanceAPIServerRef.current.server),\r\n                    ]).then((allResponses) => {\r\n                      console.log(allResponses)\r\n                      if (allResponses.length === 1 && allResponses[0] !== null) {\r\n                        let chartData = []\r\n                        let iteration = allResponses[0]['data'].length\r\n                        let sim_count = allResponses[0]['mean'].length\r\n                        allResponses[0]['mean'].forEach((mean_point, mean_index) => {\r\n                          let d = {'Mean': parseInt(mean_point * 100, 10) / 100.0, 'Name': 'Day' + mean_index}\r\n                          allResponses[0]['data'].forEach((data_points, data_i) => {\r\n                            d['Path-'+String(data_i).padStart(2, '0')] =  parseInt(data_points[mean_index] * 100, 10) / 100.0\r\n                          })\r\n                          chartData.push(d)\r\n                        })\r\n                        MonteCarloChartCompRef.current.setChart(<MonteCarloChart data={chartData} iteration={iteration} info={{}} show_mean_label={sim_count<=40} modal_mode={false}/>)\r\n                      } else {\r\n                        console.error(\"Call simulation api failed\")\r\n                        modalWindowRef.current.popModalWindow(<div>Call simulation api failed</div>)\r\n                      }\r\n                      loadingAnimeRef.current.setLoading(false)\r\n                    }).catch(() => {\r\n                      console.error(\"Call simulation api failed...\")\r\n                      modalWindowRef.current.popModalWindow(<div>Call simulation api failed...</div>)\r\n                      loadingAnimeRef.current.setLoading(false)\r\n                    })\r\n                  }}>{'Simulation'}</Button>\r\n                </ThemeProvider>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </div>\r\n      <div className={StockPriceSimulationStyle.chart}>\r\n        <MonteCarloChartComp MonteCarloChartCompRef={MonteCarloChartCompRef}/>\r\n      </div>\r\n      <ModalWindow modalWindowRef={modalWindowRef} />\r\n      <FetchNornFinanceAPIServer FetchNornFinanceAPIServerRef={FetchNornFinanceAPIServerRef}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default StockPriceSimulation\r\n","import React, { useRef } from 'react'\r\nimport { StylesProvider } from '@mui/styles'\r\n\r\nimport Layout from '../components/layout'\r\nimport StockPriceSimulation from '../components/stock-price-simulation/StockPriceSimulation'\r\nimport LoadingAnime from '../components/loadingAnime'\r\nimport SEO from '../components/seo'\r\n\r\nconst StockPriceSimulationPage = () => {\r\n\r\n  const loadingAnimeRef = useRef({\r\n    getLoading: null,\r\n    setLoading: null\r\n  })\r\n\r\n  return (\r\n    <StylesProvider injectFirst>\r\n      <SEO />\r\n      <Layout >\r\n        <StockPriceSimulation loadingAnimeRef={loadingAnimeRef} />\r\n      </Layout>\r\n      <LoadingAnime loadingAnimeRef={loadingAnimeRef} />\r\n    </StylesProvider>\r\n  )\r\n}\r\n\r\nexport default StockPriceSimulationPage\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\"\n}), 'Info');\n\nexports.default = _default;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"StockPriceSimulation-module--container--oAaYx\",\"queryPannel\":\"StockPriceSimulation-module--queryPannel--3DlMY\",\"parameterTitle\":\"StockPriceSimulation-module--parameterTitle--Yjfuv\",\"parameterBlock\":\"StockPriceSimulation-module--parameterBlock--31zQ1\",\"valueText\":\"StockPriceSimulation-module--valueText--1U149\",\"queryBtn\":\"StockPriceSimulation-module--queryBtn--8XrjZ\",\"queryBtnMobile\":\"StockPriceSimulation-module--queryBtnMobile--3Te8v\",\"chart\":\"StockPriceSimulation-module--chart--2D8cw\"};"],"sourceRoot":""}