{"version":3,"sources":["webpack:///./node_modules/shortid/lib/is-valid.js","webpack:///./src/components/market-correlation-matrix/marketCorrelationMatrix.module.scss","webpack:///./node_modules/nanoid/format.browser.js","webpack:///./node_modules/shortid/lib/index.js","webpack:///./node_modules/shortid/lib/random/random-byte-browser.js","webpack:///./src/components/market-correlation-matrix/rollingCorrelationChart.js","webpack:///./src/components/market-correlation-matrix/marketCorrelationMatrix.js","webpack:///./src/pages/market-correlation-matrix.js","webpack:///./node_modules/shortid/lib/build.js","webpack:///./node_modules/shortid/lib/alphabet.js","webpack:///./node_modules/shortid/lib/random/random-from-seed.js","webpack:///./node_modules/shortid/index.js","webpack:///./node_modules/shortid/lib/util/cluster-worker-id-browser.js","webpack:///./node_modules/shortid/lib/generate.js"],"names":["alphabet","module","exports","id","length","RegExp","get","replace","test","random","size","mask","Math","log","LN2","step","bytes","i","build","isValid","clusterWorkerId","generate","seed","seedValue","worker","workerId","characters","newCharacters","undefined","shuffled","randomByte","crypto","window","msCrypto","getRandomValues","Uint8Array","push","floor","RollingCorrelationChart","data","description","style","width","innerWidth","height","innerHeight","maxWidth","maxHeight","ResponsiveContainer","LineChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","tickFormatter","tickItem","moment","format","YAxis","domain","Tooltip","Legend","Line","type","name","stroke","dot","getTableCategories","table","map","category","symbol","src","table2MatrixData","categories","reduce","acc","rowSymbolSrc","find","d","categoryCorrelations","acc2","colSymbolSrc","correlation","alpha","value","correlations","pValue","dataUrl","row","findIndex","p","column","color","abs","isNaN","positiveColor","MatrixNode","popperTipRef","modalWindowRef","nodeStyle","marketCorrelationMatrixStyle","matrixNode","matrixNodeFirstRow","matrixNodeFirstColumn","message","fetch1","useFetch","cachePolicy","fetch2","className","background","onMouseOver","event","current","setOpen","currentTarget","onMouseOut","onClick","getMarketData","fetchObj","a","fileName","match","join","resp_data","response","ok","Promise","all","then","allResponses","o1","o2","convertDictData","arr","d1","d2","days","key_data_val","key_data_is_monthly_intervals","Date","parse","forEach","v","parseFloat","dt","date_offset","getMonth","toString","padStart","getFullYear","dataDict1","dataDict2","keys","Object","filter","hasOwnProperty","bind","slidingWindowSize","startCalcTime","rollingCorrelationWindowDays","max","pcorrData","dataX","dataY","slice","e","x","y","sumX","sumY","sumXY","sumX2","sumY2","minLength","score","min","xi","idx","yi","sqrt","popModalWindow","catch","toFixed","PopperTip","msg","setAnchorEl","setMessage","setOpenPopper","getOpen","openPopper","useState","anchorEl","Popper","open","transition","TransitionProps","Fade","timeout","Paper","padding","whiteSpace","lineHeight","textAlign","MarketCorrelationMatrix","output","loadingAnimeRef","useRef","popPureModal","setTable","getCorrelationTable","console","setLoading","useEffect","container","display","justifyItems","alignItems","gridTemplateColumns","repeat","matrixColTitle","key","shortid","val","matrixRowTitle","Link","href","target","rel","MarketCorrelationMatrixPage","getLoading","StylesProvider","injectFirst","counter","previousSeconds","str","seconds","now","previousSeed","randomFromSeed","ORIGINAL","reset","setCharacters","_alphabet_","Error","unique","split","item","ind","lastIndexOf","getShuffled","characterIndex","sourceArray","targetArray","r","nextValue","splice","shuffle","lookup","index","_seed_","number","done","loopCounter","pow"],"mappings":"8FAEA,IAAIA,EAAW,EAAQ,QAWvBC,EAAOC,QATP,SAAmBC,GACjB,SAAKA,GAAoB,iBAAPA,GAAmBA,EAAGC,OAAS,KAI7B,IAAIC,OAAO,KAAOL,EAASM,MAAMC,QAAQ,uBAAwB,QAAU,KACzEC,KAAKL,K,uBCT7BF,EAAOC,QAAU,CAAC,UAAY,mDAAmD,eAAiB,wDAAwD,eAAiB,wDAAwD,mBAAqB,4DAA4D,sBAAwB,+DAA+D,WAAa,sD,qBCCxZD,EAAOC,QAAU,SAAUO,EAAQT,EAAUU,GAqB3C,IAfA,IAAIC,GAAQ,GAAKC,KAAKC,IAAIb,EAASI,OAAS,GAAKQ,KAAKE,KAAO,EAYzDC,KAAU,IAAMJ,EAAOD,EAAOV,EAASI,QACvCD,EAAK,KAOP,IAJA,IAAIa,EAAQP,EAAOM,GAEfE,EAAIF,EAEDE,KAKL,IAFAd,GAAMH,EAASgB,EAAMC,GAAKN,IAAS,IAE5BP,UAAYM,EAAM,OAAOP,I,kCC/BtC,IAAIH,EAAW,EAAQ,QAEnBkB,EAAQ,EAAQ,QAEhBC,EAAU,EAAQ,QAMlBC,EAAkB,EAAQ,SAA+B,EA4C7D,SAASC,IACP,OAAOH,EAAME,GAIfnB,EAAOC,QAAUmB,EACjBpB,EAAOC,QAAQmB,SAAWA,EAC1BpB,EAAOC,QAAQoB,KA3Cf,SAAcC,GAEZ,OADAvB,EAASsB,KAAKC,GACPtB,EAAOC,SA0ChBD,EAAOC,QAAQsB,OAhCf,SAAgBC,GAEd,OADAL,EAAkBK,EACXxB,EAAOC,SA+BhBD,EAAOC,QAAQwB,WAtBf,SAAoBC,GAKlB,YAJsBC,IAAlBD,GACF3B,EAAS0B,WAAWC,GAGf3B,EAAS6B,YAkBlB5B,EAAOC,QAAQiB,QAAUA,G,kCChEzB,EAAQ,QAER,EAAQ,QAER,IAEIW,EAFAC,EAA2B,iBAAXC,SAAwBA,OAAOD,QAAUC,OAAOC,UAelEH,EAXGC,GAAWA,EAAOG,gBAWR,SAAoBxB,GAC/B,OAAOqB,EAAOG,gBAAgB,IAAIC,WAAWzB,KAXlC,SAAoBA,GAG/B,IAFA,IAAIM,EAAQ,GAEHC,EAAI,EAAGA,EAAIP,EAAMO,IACxBD,EAAMoB,KAAKxB,KAAKyB,MAAsB,IAAhBzB,KAAKH,WAG7B,OAAOO,GAQXf,EAAOC,QAAU4B,G,iXCgBFQ,EA5BiB,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACvC,OACE,yBAAKC,MAAO,CAAEC,MAAQV,OAAOW,WAAa,IAAO,KAAMC,OAASZ,OAAOa,YAAc,IAAO,KAAMC,SAAU,SAAUC,UAAW,UAC/H,kBAACC,EAAA,EAAD,CAAqBN,MAAM,OAAOE,OAAO,QACvC,kBAACK,EAAA,EAAD,CACEV,KAAMA,EACNW,OAAQ,CACNC,IAAK,EACLC,MAAO,GACPC,KAAM,GACNC,OAAQ,IAGV,kBAACC,EAAA,EAAD,CAAeC,gBAAgB,QAC/B,kBAACC,EAAA,EAAD,CAAOC,QAAQ,OAAOC,cAAe,SAACC,GACpC,OAAOC,IAAOD,GAAUE,OAAO,iBAEjC,kBAACC,EAAA,EAAD,CAAOC,OAAQ,EAAE,EAAG,KACpB,kBAACC,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAMC,KAAK,WAAWC,KAAM7B,EAAakB,QAAQ,QAAQY,OAAO,UAAUC,KAAK,Q,qBCDnFC,EAAqB,SAACC,GAC1B,OAAOA,EAAMC,KAAI,SAACC,GAChB,MAAO,CACLC,OAAQD,EAASC,OACjBC,IAAKF,EAASE,SAKdC,EAAmB,SAACL,GAExB,IAAMM,EAAaP,EAAmBC,GAwCtC,OA5BmBM,EAAWC,QAAO,SAACC,EAAKC,GACzC,IAAMP,EAAWF,EAAMU,MAAK,SAACC,GAAD,OAAOA,EAAER,SAAWM,EAAaN,UACvDS,EAAuBN,EAAWC,QAAO,SAACM,EAAMC,GACpD,IAbmBC,EACfC,EAYEC,EAAQf,EAASgB,aAAaJ,EAAaX,QAAnC,MACRgB,EAASjB,EAASgB,aAAaJ,EAAaX,QAAnC,QACTiB,EAAUlB,EAAQ,QAClBmB,EAAMf,EAAWgB,WAAU,SAAAC,GAAC,OAAIA,EAAEpB,QAAUM,EAAaN,UACzDqB,EAASlB,EAAWgB,WAAU,SAAAC,GAAC,OAAIA,EAAEpB,QAAUW,EAAaX,UAC5DsB,EACJR,EAAQ,GAnBSF,EAmBSE,EAlBxBD,EAAQ7E,KAAKuF,IAAIX,GACjB,sBAAsBY,MAAMX,GAAS,EAAIA,GAA/C,KAGoB,SAACD,GACrB,IAAMC,EAAQ7E,KAAKuF,IAAIX,GACvB,MAAM,uBAAuBY,MAAMX,GAAS,EAAIA,GAAhD,IAYuCY,CAAcX,GAEnD,MAAM,GAAN,mBACKJ,GADL,CAEE,CACEC,eACAL,eACAY,MACAG,SACAP,QACAE,SACAC,UACAK,aAGH,IACH,MAAM,GAAN,mBAAWjB,GAAX,YAAmBI,MAClB,KAKCiB,EAAa,SAAC,GAA4C,IAA1C/D,EAAyC,EAAzCA,KAAMgE,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,eACpCC,EAAYC,IAA6BC,WAC5B,IAAbpE,EAAKuD,MACPW,GAAa,IAAMC,IAA6BE,oBAG9B,IAAhBrE,EAAK0D,SACPQ,GAAa,IAAMC,IAA6BG,uBAGlD,IAAMC,EACLvE,EAAKgD,aAAaX,OADN,UACsBrC,EAAKmD,MAD3B,mBACmDnD,EAAK2C,aAAaN,OADrE,cAEJrC,EAAKqD,OAFD,KAIPmB,EAASC,YAAS,CAAEC,YAAa,aACjCC,EAASF,YAAS,CAAEC,YAAa,aAEvC,OACE,yBAAKE,UAAWV,GACd,yBAAKhE,MAAO,CAAE2E,WAAY7E,EAAK2D,OAASmB,YAAa,SAACC,GACpDf,EAAagB,QAAQC,SAAQ,EAAMF,EAAMG,cAAeX,IACvDY,WAAY,WACbnB,EAAagB,QAAQC,SAAQ,IAC5BG,QAAS,WACV,IAAMC,EAAa,uCAAG,WAAO/C,EAAKD,EAAQiD,GAApB,iBAAAC,EAAA,6DAChBC,GAAYlD,EAAM,IAAMD,GAAQoD,MAAM,SAASC,KAAK,KAAO,QAD3C,SAEIJ,EAASvH,IAAI,sBAAwByH,GAFzC,UAEdG,EAFc,SAGhBL,EAASM,SAASC,IAAMF,EAAU3F,MAAQ2F,EAAU3F,KAAKnC,OAAS,GAHlD,yCAIX8H,EAAU3F,MAJC,gCAOX,MAPW,2CAAH,0DAWnB8F,QAAQC,IAAI,CACVV,EAAcrF,EAAKgD,aAAaV,IAAKtC,EAAKgD,aAAaX,OAAQmC,GAC/Da,EAAcrF,EAAK2C,aAAaL,IAAKtC,EAAK2C,aAAaN,OAAQsC,KAC9DqB,MAAK,SAACC,GAEqB,IAAxBA,EAAapI,QAAoC,OAApBoI,EAAa,IAAmC,OAApBA,EAAa,GAAc,WAoCtF,IAlCA,IA2B4BC,EAAIC,EAvB1BC,EAAkB,SAACC,GACvB,IALwBC,EAAIC,EAAIC,EAK5BC,EAAe,GACbC,GANkBJ,EAM+BD,EAAI,GAAJ,KAN3BE,EAM2CF,EAAI,GAAJ,KANvCG,EAMuD,GALhFG,KAAKC,MAAMN,GAAMK,KAAKC,MAAML,GAAa,GAAPC,EAAY,GAAK,GAAK,KAoB/D,OAdAH,EAAIQ,SAAQ,SAAChE,EAAGnE,GACd,IAAIoI,EAAIjE,EAAC,MAKT,GAJiB,iBAANiE,IACTA,EAAIC,WAAWD,EAAE9I,QAAQ,IAAK,MAG5B0I,EAA+B,CACjC,IAAIM,EAAKL,KAAKC,MAAM/D,EAAC,MACfoE,GAAeD,EAAGE,WAAa,GAAGC,WAAWC,SAAS,EAAG,KAAO,OAASJ,EAAGK,cAAcF,WAChGV,EAAaQ,GAAeH,OAE5BL,EAAa5D,EAAC,MAAYiE,KAGvBL,GAGLa,EAAYlB,EAAgBH,EAAa,IACzCsB,EAAYnB,EAAgBH,EAAa,IAMvCuB,GAJsBtB,EAIIoB,EAJAnB,EAIWoB,EAHlCE,OAAOD,KAAKtB,GAAIwB,OAAO,GAAGC,eAAeC,KAAKzB,KAInD0B,EAAoB,EACpBC,EAAgBnB,KAAKC,MAAMY,EAAKA,EAAK3J,OAAS,IAAqC,GAA/BkK,IAAoC,GAAK,GAAK,IAC7FrJ,EAAI8I,EAAK3J,OAAS,EAAGa,GAAG,EAAGA,IAClC,GAAIoJ,GAAiBnB,KAAKC,MAAMY,EAAK9I,IAAK,CACxCmJ,EAAoBxJ,KAAK2J,IAAIH,EAAmBL,EAAK3J,OAAS,EAAIa,EAAI,GACtE,MAKJ,IADA,IAAIuJ,EAAY,GA3CqE,WA4C5EvJ,GAEP,IAAIwJ,EAAQ,GACRC,EAAQ,GACKX,EAAKY,MAAM1J,EAAGA,EAAImJ,GACxBhB,SAAQ,SAACwB,GAClBH,EAAMrI,KAAKyH,EAAUe,IACrBF,EAAMtI,KAAK0H,EAAUc,OAEvB,IAtKCC,EAAGC,EACZC,EACFC,EACAC,EACAC,EACAC,EACIC,EAgKUC,GAtKAP,EAsKqBJ,EArKjCK,EAAO,EACTC,EAAO,EACPC,EAAQ,EACRC,EAAQ,EACRC,EAAQ,EACJC,GANOP,EAsKiBJ,GAhKVrK,OAAS0K,EAAE1K,OAASQ,KAAK0K,IAAIT,EAAEzK,OAAQ0K,EAAE1K,QAS7DyK,EAAEzB,SARS,SAACmC,EAAIC,GACZ,IAAMC,EAAKX,EAAEU,GACbT,GAAQQ,EACRP,GAAQS,EACRR,GAASM,EAAKE,EACdP,GAASK,EAAKA,EACdJ,GAASM,EAAKA,MAGVL,EAAYH,EAAQF,EAAOC,GAAQpK,KAAK8K,MAAMN,EAAYF,EAAQH,EAAOA,IAASK,EAAYD,EAAQH,EAAOA,KAuJzGR,EAAUpI,KAAK,CAAE,KAAQ2H,EAAK9I,GAAI,MAASoK,KAVpCpK,EAAI8I,EAAK3J,OAAS,EAAIgK,EAAoB,EAAGnJ,GAAK,EAAGA,IAAM,EAA3DA,GAcT,IAAMuB,EAAiBD,EAAK2C,aAAaN,OAAxB,MAAoCrC,EAAKgD,aAAaX,OAAtD,YAAwE0F,IAAxE,oBACjB9D,EAAee,QAAQoE,eAAe,kBAAC,EAAD,CAAyBpJ,KAAMiI,EAAWhI,YAAaA,KA3DP,GA6DtFgE,EAAee,QAAQoE,eAAe,iEAEvCC,OAAM,WACPpF,EAAee,QAAQoE,eAAe,iGAG1B,QAAbpJ,EAAKmD,MAAgB,MAAQnD,EAAKmD,MAAMmG,QAAQ,GAAGtL,QAAQ,wBAAyB,IAAIA,QAAQ,KAAK,QAMxGuL,EAAY,SAAC,GAAoB,EAAlBvF,aAGNgB,QAAU,CACrBC,QAAS,SAAC6B,EAAGvB,EAAQiE,QAAW,IAAnBjE,MAAE,WAAiB,IAAXiE,MAAI,IACnB1C,IACF2C,EAAYlE,GACZmE,EAAWF,IAEbG,EAAc7C,IAEhB8C,QAAS,WACP,OAAOC,IAIX,MAAoCC,oBAAS,GAAtCD,EAAP,KAAmBF,EAAnB,KACA,EAAgCG,mBAAS,MAAlCC,EAAP,KAAiBN,EAAjB,KACA,EAA8BK,mBAAS,IAAhCvF,EAAP,KAAgBmF,EAAhB,KAEA,OACE,kBAACM,EAAA,EAAD,CAAQC,KAAMJ,EAAYE,SAAUA,EAAUG,YAAU,IACrD,gBAAGC,EAAH,EAAGA,gBAAH,OACC,kBAACC,EAAA,EAAD,iBAAUD,EAAV,CAA2BE,QAAS,MAClC,kBAACC,EAAA,EAAD,CAAOpK,MAAO,CAACqK,QAAS,SACtB,0BAAMrK,MAAO,CAAEsK,WAAY,WAAYC,WAAY,OAAQC,UAAW,WAAYnG,SAuF/EoG,EA/EiB,SAAC,GAAyB,IAwClDC,EAxC2BC,EAAsB,EAAtBA,gBAE3B5G,EAAiB6G,iBAAO,CAC5B1B,eAAgB,KAChB2B,aAAc,OAGV/G,EAAe8G,iBAAO,CAC1B7F,QAAS,KACT2E,QAAS,OAGX,EAA0BE,mBAAS,IAA5B5H,EAAP,KAAc8I,EAAd,KAEA,EAA0BvG,YAAS,CAAEC,YAAa,aAA1C3G,EAAR,EAAQA,IAAK6H,EAAb,EAAaA,SACPqF,EAAmB,uCAAG,4BAAA1F,EAAA,sEACFxH,EAAI,6CADF,OACpB4H,EADoB,OAEtBC,EAASC,IACXqF,QAAQ5M,IAAIqH,GACZqF,EAASrF,EAAS,SAGlB1B,EAAee,QAAQoE,eAAe,4EACtC4B,EAAS,KAEXH,EAAgB7F,QAAQmG,YAAW,GAVT,2CAAH,qDAkDzB,OATAC,qBAAU,WAIR,OADAH,IACO,eAGN,IAGD,oCACE,yBAAKrG,UAAWT,IAA6BkH,WAC3C,yBAAKnL,MAAO,CAAEoL,QAAS,OAAQC,aAAc,SAAUC,WAAY,SAAUC,oBAAqB,SAAW,QAAQC,OAAOzJ,EAAmBC,GAAOrE,UAtCxJ,oCACE,yBAAK+G,UAAWT,IAA6BwH,eAAgBC,IAAKC,IAAQ/M,aACzEmD,EAAmBC,GAAOC,KAAI,SAAC2J,GAC9B,OAAO,yBAAKlH,UAAWT,IAA6BwH,eAAgBC,IAAKC,IAAQ/M,YAAagN,EAAIzJ,aAOpGuI,EAAS,GACbrI,EAAiBL,GAAO2E,SAAQ,SAAChE,EAAGnE,GAC9BA,EAAIwD,EAAMrE,QAAW,GACvB+M,EAAO/K,KACL,yBAAK+E,UAAWT,IAA6B4H,eAAgBH,IAAKC,IAAQ/M,YACxE,kBAACkN,EAAA,EAAD,CAAMC,KAAMpJ,EAAES,QAAS4I,OAAO,SAASC,IAAI,uBACzC,8BAAOtJ,EAAEF,aAAaN,WAI9BuI,EAAO/K,KAAK,kBAAC,EAAD,CAAYG,KAAM6C,EAAGmB,aAAcA,EAAcC,eAAgBA,EAAgB2H,IAAKC,IAAQ/M,iBAGrG8L,KAoBL,kBAAC,EAAD,CAAW5G,aAAcA,IACzB,kBAAC,IAAD,CAAaC,eAAgBA,M,wBCzRpBmI,UAlBqB,WAElC,IAAMvB,EAAkBC,iBAAO,CAC7BuB,WAAY,KACZlB,WAAY,OAGd,OACE,kBAACmB,EAAA,EAAD,CAAgBC,aAAW,GACzB,kBAAC,IAAD,MACA,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAyB1B,gBAAiBA,KAE5C,kBAAC,IAAD,CAAcA,gBAAiBA,O,kCCnBrC,IAYI2B,EAEAC,EAdA3N,EAAW,EAAQ,QAER,EAAQ,QAwCvBpB,EAAOC,QAtBP,SAAekB,GACb,IAAI6N,EAAM,GACNC,EAAUtO,KAAKyB,MAAmC,MAA5B6G,KAAKiG,MAff,gBAgChB,OAfID,IAAYF,EACdD,KAEAA,EAAU,EACVC,EAAkBE,GAGpBD,GAAY5N,EArBA,GAsBZ4N,GAAY5N,EAASD,GAEjB2N,EAAU,IACZE,GAAY5N,EAAS0N,IAGvBE,GAAY5N,EAAS6N,K,kCCtCvB,IAGIlP,EACAoP,EACAvN,EALAwN,EAAiB,EAAQ,QAEzBC,EAAW,mEAKf,SAASC,IACP1N,GAAW,EAGb,SAAS2N,EAAcC,GACrB,GAAKA,GASL,GAAIA,IAAezP,EAAnB,CAIA,GAAIyP,EAAWrP,SAAWkP,EAASlP,OACjC,MAAM,IAAIsP,MAAM,uCAAyCJ,EAASlP,OAAS,qCAAuCqP,EAAWrP,OAAS,gBAAkBqP,GAG1J,IAAIE,EAASF,EAAWG,MAAM,IAAI3F,QAAO,SAAU4F,EAAMC,EAAKlH,GAC5D,OAAOkH,IAAQlH,EAAImH,YAAYF,MAGjC,GAAIF,EAAOvP,OACT,MAAM,IAAIsP,MAAM,uCAAyCJ,EAASlP,OAAS,yDAA2DuP,EAAO1H,KAAK,OAGpJjI,EAAWyP,EACXF,UAzBMvP,IAAasP,IACftP,EAAWsP,EACXC,KA2DN,SAASS,IACP,OAAInO,IAIJA,EAxBF,WACO7B,GACHwP,EAAcF,GAQhB,IALA,IAGIW,EAHAC,EAAclQ,EAAS4P,MAAM,IAC7BO,EAAc,GACdC,EAAIf,EAAegB,YAGhBH,EAAY9P,OAAS,GAC1BgQ,EAAIf,EAAegB,YACnBJ,EAAiBrP,KAAKyB,MAAM+N,EAAIF,EAAY9P,QAC5C+P,EAAY/N,KAAK8N,EAAYI,OAAOL,EAAgB,GAAG,IAGzD,OAAOE,EAAYlI,KAAK,IAQbsI,IAmBbtQ,EAAOC,QAAU,CACfI,IALF,WACE,OAAON,GAAYsP,GAKnB5N,WA3DF,SAAoB+N,GAElB,OADAD,EAAcC,GACPzP,GA0DPsB,KAvDF,SAAiBA,GACf+N,EAAe/N,KAAKA,GAEhB8N,IAAiB9N,IACnBiO,IACAH,EAAe9N,IAmDjBkP,OAbF,SAAgBC,GAEd,OADuBT,IACCS,IAYxB5O,SAAUmO,I,kCCtGZ,IAAI1O,EAAO,EAgBXrB,EAAOC,QAAU,CACfmQ,UAVF,WAEE,OADA/O,GAAe,KAAPA,EAAc,OAAS,QACjB,QASdA,KANF,SAAiBoP,GACfpP,EAAOoP,K,kCCdTzQ,EAAOC,QAAU,EAAQ,S,kCCAzBD,EAAOC,QAAU,G,kCCAjB,IAAIF,EAAW,EAAQ,QAEnBS,EAAS,EAAQ,QAEjBqD,EAAS,EAAQ,QAgBrB7D,EAAOC,QAdP,SAAkByQ,GAKhB,IAJA,IACIC,EADAC,EAAc,EAEd5B,EAAM,IAEF2B,GACN3B,GAAYnL,EAAOrD,EAAQT,EAASM,MAAO,GAC3CsQ,EAAOD,EAAS/P,KAAKkQ,IAAI,GAAID,EAAc,GAC3CA,IAGF,OAAO5B","file":"component---src-pages-market-correlation-matrix-js-985769fc96e0ec1ac8c2.js","sourcesContent":["'use strict';\n\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n  if (!id || typeof id !== 'string' || id.length < 6) {\n    return false;\n  }\n\n  var nonAlphabetic = new RegExp('[^' + alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') + ']');\n  return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"marketCorrelationMatrix-module--container--Xm37f\",\"matrixColTitle\":\"marketCorrelationMatrix-module--matrixColTitle--2Xiij\",\"matrixRowTitle\":\"marketCorrelationMatrix-module--matrixRowTitle--2Yamv\",\"matrixNodeFirstRow\":\"marketCorrelationMatrix-module--matrixNodeFirstRow--3-Qv7\",\"matrixNodeFirstColumn\":\"marketCorrelationMatrix-module--matrixNodeFirstColumn--1iHHg\",\"matrixNode\":\"marketCorrelationMatrix-module--matrixNode--2o4fm\"};","// This file replaces `format.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\nmodule.exports = function (random, alphabet, size) {\n  // We can’t use bytes bigger than the alphabet. To make bytes values closer\n  // to the alphabet, we apply bitmask on them. We look for the closest\n  // `2 ** x - 1` number, which will be bigger than alphabet size. If we have\n  // 30 symbols in the alphabet, we will take 31 (00011111).\n  // We do not use faster Math.clz32, because it is not available in browsers.\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1; // Bitmask is not a perfect solution (in our example it will pass 31 bytes,\n  // which is bigger than the alphabet). As a result, we will need more bytes,\n  // than ID size, because we will refuse bytes bigger than the alphabet.\n  // Every hardware random generator call is costly,\n  // because we need to wait for entropy collection. This is why often it will\n  // be faster to ask for few extra bytes in advance, to avoid additional calls.\n  // Here we calculate how many random bytes should we call in advance.\n  // It depends on ID length, mask / alphabet size and magic number 1.6\n  // (which was selected according benchmarks).\n  // -~f => Math.ceil(f) if n is float number\n  // -~i => i + 1 if n is integer number\n\n  var step = -~(1.6 * mask * size / alphabet.length);\n  var id = '';\n\n  while (true) {\n    var bytes = random(step); // Compact alternative for `for (var i = 0; i < step; i++)`\n\n    var i = step;\n\n    while (i--) {\n      // If random byte is bigger than alphabet even after bitmask,\n      // we refuse it by `|| ''`.\n      id += alphabet[bytes[i] & mask] || ''; // More compact than `id.length + 1 === size`\n\n      if (id.length === +size) return id;\n    }\n  }\n};","'use strict';\n\nvar alphabet = require('./alphabet');\n\nvar build = require('./build');\n\nvar isValid = require('./is-valid'); // if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\n\n\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\n\nfunction seed(seedValue) {\n  alphabet.seed(seedValue);\n  return module.exports;\n}\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\n\n\nfunction worker(workerId) {\n  clusterWorkerId = workerId;\n  return module.exports;\n}\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\n\n\nfunction characters(newCharacters) {\n  if (newCharacters !== undefined) {\n    alphabet.characters(newCharacters);\n  }\n\n  return alphabet.shuffled();\n}\n/**\n * Generate unique id\n * Returns string id\n */\n\n\nfunction generate() {\n  return build(clusterWorkerId);\n} // Export all other functions as properties of the generate function\n\n\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;","'use strict';\n\nrequire(\"core-js/modules/es.typed-array.set.js\");\n\nrequire(\"core-js/modules/es.typed-array.sort.js\");\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n  randomByte = function randomByte(size) {\n    var bytes = [];\n\n    for (var i = 0; i < size; i++) {\n      bytes.push(Math.floor(Math.random() * 256));\n    }\n\n    return bytes;\n  };\n} else {\n  randomByte = function randomByte(size) {\n    return crypto.getRandomValues(new Uint8Array(size));\n  };\n}\n\nmodule.exports = randomByte;","import React from 'react'\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer\r\n} from 'recharts'\r\n\r\nimport moment from 'moment'\r\n\r\nconst RollingCorrelationChart = ({ data, description }) => {\r\n  return (\r\n    <div style={{ width: (window.innerWidth - 100) + 'px', height: (window.innerHeight - 100) + 'px', maxWidth: '1200px', maxHeight: '600px' }}>\r\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n        <LineChart\r\n          data={data}\r\n          margin={{\r\n            top: 5,\r\n            right: 30,\r\n            left: 20,\r\n            bottom: 5,\r\n          }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"Date\" tickFormatter={(tickItem) => {\r\n            return moment(tickItem).format('MM/DD/YYYY')\r\n          }} />\r\n          <YAxis domain={[-1, 1]}/>\r\n          <Tooltip />\r\n          <Legend />\r\n          <Line type=\"monotone\" name={description} dataKey=\"Score\" stroke=\"#8884d8\" dot={false} />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default RollingCorrelationChart\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport Link from '@mui/material/Link'\r\nimport Popper from '@mui/material/Popper'\r\nimport Fade from '@mui/material/Fade'\r\nimport Paper from '@mui/material/Paper'\r\nimport shortid from 'shortid'\r\nimport useFetch from 'use-http'\r\n\r\nimport ModalWindow from '../modalWindow'\r\nimport { rollingCorrelationWindowDays } from '../../common/common'\r\nimport RollingCorrelationChart from './rollingCorrelationChart'\r\n\r\nimport marketCorrelationMatrixStyle from './marketCorrelationMatrix.module.scss'\r\n\r\nconst pcorr = (x, y) => {\r\n  let sumX = 0,\r\n    sumY = 0,\r\n    sumXY = 0,\r\n    sumX2 = 0,\r\n    sumY2 = 0;\r\n  const minLength = x.length = y.length = Math.min(x.length, y.length),\r\n    reduce = (xi, idx) => {\r\n      const yi = y[idx];\r\n      sumX += xi;\r\n      sumY += yi;\r\n      sumXY += xi * yi;\r\n      sumX2 += xi * xi;\r\n      sumY2 += yi * yi;\r\n    }\r\n  x.forEach(reduce)\r\n  return (minLength * sumXY - sumX * sumY) / Math.sqrt((minLength * sumX2 - sumX * sumX) * (minLength * sumY2 - sumY * sumY))\r\n}\r\n\r\nconst getTableCategories = (table) => {\r\n  return table.map((category) => {\r\n    return {\r\n      symbol: category.symbol,\r\n      src: category.src\r\n    }\r\n  })\r\n}\r\n\r\nconst table2MatrixData = (table) => {\r\n\r\n  const categories = getTableCategories(table)\r\n\r\n  const negativeColor = (correlation) => {\r\n    const alpha = Math.abs(correlation)\r\n    return `rgba(243, 87, 86, ${isNaN(alpha) ? 0 : alpha})`\r\n  }\r\n\r\n  const positiveColor = (correlation) => {\r\n    const alpha = Math.abs(correlation);\r\n    return `rgba(46, 233, 255, ${isNaN(alpha) ? 0 : alpha})`\r\n  }\r\n\r\n  const parsedData = categories.reduce((acc, rowSymbolSrc) => {\r\n    const category = table.find((d) => d.symbol === rowSymbolSrc.symbol)\r\n    const categoryCorrelations = categories.reduce((acc2, colSymbolSrc) => {\r\n      const value = category.correlations[colSymbolSrc.symbol]['value']\r\n      const pValue = category.correlations[colSymbolSrc.symbol]['p_value']\r\n      const dataUrl = category['dataUrl']\r\n      const row = categories.findIndex(p => p.symbol == rowSymbolSrc.symbol)\r\n      const column = categories.findIndex(p => p.symbol == colSymbolSrc.symbol)\r\n      const color =\r\n        value < 0 ? negativeColor(value) : positiveColor(value)\r\n\r\n      return [\r\n        ...acc2,\r\n        {\r\n          colSymbolSrc,\r\n          rowSymbolSrc,\r\n          row,\r\n          column,\r\n          value,\r\n          pValue,\r\n          dataUrl,\r\n          color\r\n        }\r\n      ]\r\n    }, [])\r\n    return [...acc, ...categoryCorrelations];\r\n  }, [])\r\n\r\n  return parsedData\r\n}\r\n\r\nconst MatrixNode = ({ data, popperTipRef, modalWindowRef }) => {\r\n  let nodeStyle = marketCorrelationMatrixStyle.matrixNode\r\n  if (data.row === 0) {\r\n    nodeStyle += ' ' + marketCorrelationMatrixStyle.matrixNodeFirstRow\r\n  }\r\n\r\n  if (data.column === 0) {\r\n    nodeStyle += ' ' + marketCorrelationMatrixStyle.matrixNodeFirstColumn\r\n  }\r\n\r\n  const message = \r\n`${data.colSymbolSrc.symbol} has a ${data.value} correlation to ${data.rowSymbolSrc.symbol}\r\np-value: ${data.pValue}\r\n`\r\n  const fetch1 = useFetch({ cachePolicy: 'no-cache' })\r\n  const fetch2 = useFetch({ cachePolicy: 'no-cache' })\r\n\r\n  return (\r\n    <div className={nodeStyle}>\r\n      <div style={{ background: data.color }} onMouseOver={(event)=>{\r\n        popperTipRef.current.setOpen(true, event.currentTarget, message)\r\n      }} onMouseOut={() => {\r\n        popperTipRef.current.setOpen(false)\r\n      }} onClick={()=>{\r\n        const getMarketData = async (src, symbol, fetchObj) => {\r\n          let fileName = (src + '_' + symbol).match(/\\w+/gi).join('_') + '.json'\r\n          const resp_data = await fetchObj.get('/norn-data/markets/' + fileName)\r\n          if (fetchObj.response.ok && resp_data.data && resp_data.data.length > 0) {\r\n            return resp_data.data\r\n          }\r\n          else {\r\n            return null\r\n          }\r\n        }\r\n\r\n        Promise.all([\r\n          getMarketData(data.colSymbolSrc.src, data.colSymbolSrc.symbol, fetch1),\r\n          getMarketData(data.rowSymbolSrc.src, data.rowSymbolSrc.symbol, fetch2),\r\n        ]).then((allResponses) => {\r\n          // console.log(allResponses)\r\n          if (allResponses.length === 2 && allResponses[0] !== null && allResponses[1] !== null) {\r\n            \r\n            const overDateInterval = (d1, d2, days) => {\r\n              return Date.parse(d1) - Date.parse(d2) > days * 24 * 60 * 60 * 1000\r\n            }\r\n\r\n            const convertDictData = (arr) => {\r\n              let key_data_val = {}\r\n              const key_data_is_monthly_intervals = overDateInterval(arr[0][\"Date\"], arr[1][\"Date\"], 15)\r\n              arr.forEach((d, i) => {\r\n                let v = d[\"Close\"]\r\n                if (typeof v === 'string') {\r\n                  v = parseFloat(v.replace(\"%\", \"\"))\r\n                }\r\n\r\n                if (key_data_is_monthly_intervals) {\r\n                  let dt = Date.parse(d[\"Date\"])\r\n                  const date_offset = (dt.getMonth() + 1).toString().padStart(2, \"0\") + \"/01/\" + dt.getFullYear().toString()\r\n                  key_data_val[date_offset] = v\r\n                } else {\r\n                  key_data_val[d[\"Date\"]] = v\r\n                }\r\n              })\r\n              return key_data_val\r\n            }\r\n\r\n            let dataDict1 = convertDictData(allResponses[0])\r\n            let dataDict2 = convertDictData(allResponses[1])\r\n\r\n            const getIntersectionKey = (o1, o2) => {\r\n              return Object.keys(o1).filter({}.hasOwnProperty.bind(o2));\r\n            }\r\n\r\n            const keys = getIntersectionKey(dataDict1, dataDict2)            \r\n            let slidingWindowSize = 2\r\n            let startCalcTime = Date.parse(keys[keys.length - 1]) + rollingCorrelationWindowDays * 24 * 60 * 60 * 1000\r\n            for (let i = keys.length - 2; i>=0; i--) {\r\n              if (startCalcTime <= Date.parse(keys[i])) {\r\n                slidingWindowSize = Math.max(slidingWindowSize, keys.length - 1 - i + 1)\r\n                break\r\n              }\r\n            }\r\n\r\n            let pcorrData = []\r\n            for (let i = keys.length - 1 - slidingWindowSize + 1; i >= 0; i--) {\r\n              \r\n              let dataX = []\r\n              let dataY = []\r\n              let dataWindow = keys.slice(i, i + slidingWindowSize)\r\n              dataWindow.forEach((e)=>{\r\n                dataX.push(dataDict1[e])\r\n                dataY.push(dataDict2[e])\r\n              })\r\n              let score = pcorr(dataX, dataY)\r\n              pcorrData.push({ 'Date': keys[i], 'Score': score})\r\n            }\r\n\r\n            // console.log(pcorrData)\r\n            const description = `${data.rowSymbolSrc.symbol} - ${data.colSymbolSrc.symbol} Rolling ${rollingCorrelationWindowDays} days Correlation`\r\n            modalWindowRef.current.popModalWindow(<RollingCorrelationChart data={pcorrData} description={description} />)\r\n          } else {\r\n            modalWindowRef.current.popModalWindow(<div>Load some market data failed</div>)\r\n          }\r\n        }).catch(() => {\r\n          modalWindowRef.current.popModalWindow(<div>Can't draw rolling correlation chart for these market data</div>)\r\n        })\r\n      }}>\r\n        {data.value==='NaN' ? 'NaN' : data.value.toFixed(2).replace(/(\\.0*|(?<=(\\..*))0*)$/, '').replace(\"0.\",\".\")}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst PopperTip = ({ popperTipRef }) =>{\r\n\r\n  // PopperTip API\r\n  popperTipRef.current = {\r\n    setOpen: (v, a=null, msg='') => {\r\n      if (v) {\r\n        setAnchorEl(a)\r\n        setMessage(msg)\r\n      }\r\n      setOpenPopper(v)\r\n    },\r\n    getOpen: () => {\r\n      return openPopper\r\n    }\r\n  }\r\n\r\n  const [openPopper, setOpenPopper] = useState(false)\r\n  const [anchorEl, setAnchorEl] = useState(null)\r\n  const [message, setMessage] = useState('')\r\n\r\n  return (\r\n    <Popper open={openPopper} anchorEl={anchorEl} transition>\r\n      {({ TransitionProps }) => (\r\n        <Fade {...TransitionProps} timeout={350}>\r\n          <Paper style={{padding: '10px'}}>\r\n            <span style={{ whiteSpace: 'pre-line', lineHeight: '20px', textAlign: 'center'}}>{message}</span>\r\n          </Paper>\r\n        </Fade>\r\n      )}\r\n    </Popper>\r\n  )\r\n}\r\n\r\nconst MarketCorrelationMatrix = ({ loadingAnimeRef }) => {\r\n\r\n  const modalWindowRef = useRef({\r\n    popModalWindow: null,\r\n    popPureModal: null,\r\n  })\r\n\r\n  const popperTipRef = useRef({\r\n    setOpen: null,\r\n    getOpen: null,\r\n  })\r\n\r\n  const [table, setTable] = useState([])\r\n\r\n  const { get, response } = useFetch({ cachePolicy: 'no-cache' })\r\n  const getCorrelationTable = async () => {\r\n    const resp_data = await get('/norn-data/market-correlation-matrix.json')\r\n    if (response.ok) {\r\n      console.log(resp_data)\r\n      setTable(resp_data['table'])\r\n    }\r\n    else {\r\n      modalWindowRef.current.popModalWindow(<div>Load market-correlation-matrix.json failed</div>)\r\n      setTable([])\r\n    }\r\n    loadingAnimeRef.current.setLoading(false)\r\n  }\r\n\r\n  const renderColumnTitle = () => {\r\n    return (\r\n      <>\r\n        <div className={marketCorrelationMatrixStyle.matrixColTitle} key={shortid.generate()}></div>\r\n        {getTableCategories(table).map((val) => {\r\n          return <div className={marketCorrelationMatrixStyle.matrixColTitle} key={shortid.generate()}>{val.symbol}</div>\r\n        })}\r\n      </>\r\n    )\r\n  }\r\n\r\n  const renderRowsTitleAndData = () => {\r\n    let output = []\r\n    table2MatrixData(table).forEach((d, i)=>{\r\n      if (i % table.length === 0) {\r\n        output.push(\r\n          <div className={marketCorrelationMatrixStyle.matrixRowTitle} key={shortid.generate()}>\r\n            <Link href={d.dataUrl} target=\"_blank\" rel=\"noreferrer noopener\">\r\n              <span>{d.rowSymbolSrc.symbol}</span>\r\n            </Link>\r\n          </div>)\r\n      }\r\n      output.push(<MatrixNode data={d} popperTipRef={popperTipRef} modalWindowRef={modalWindowRef} key={shortid.generate()} />)\r\n    })\r\n\r\n    return output\r\n  }\r\n\r\n  useEffect(() => {\r\n    // componentDidMount is here!\r\n    // componentDidUpdate is here!\r\n    getCorrelationTable()\r\n    return () => {\r\n      // componentWillUnmount is here!\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <div className={marketCorrelationMatrixStyle.container}>\r\n        <div style={{ display: 'grid', justifyItems: 'center', alignItems: 'center', gridTemplateColumns: '200px ' + '40px '.repeat(getTableCategories(table).length)}}>\r\n          {renderColumnTitle()}\r\n          {renderRowsTitleAndData()}\r\n        </div>\r\n      </div>\r\n      <PopperTip popperTipRef={popperTipRef}/>\r\n      <ModalWindow modalWindowRef={modalWindowRef} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MarketCorrelationMatrix\r\n","import React, { useRef } from 'react'\r\nimport { StylesProvider } from '@mui/styles'\r\n\r\nimport Layout from '../components/layout'\r\nimport MarketCorrelationMatrix from '../components/market-correlation-matrix/marketCorrelationMatrix'\r\nimport LoadingAnime from '../components/loadingAnime'\r\nimport SEO from '../components/seo'\r\n\r\nconst MarketCorrelationMatrixPage = () => {\r\n\r\n  const loadingAnimeRef = useRef({\r\n    getLoading: null,\r\n    setLoading: null\r\n  })\r\n\r\n  return (\r\n    <StylesProvider injectFirst>\r\n      <SEO />\r\n      <Layout >\r\n        <MarketCorrelationMatrix loadingAnimeRef={loadingAnimeRef} />\r\n      </Layout>\r\n      <LoadingAnime loadingAnimeRef={loadingAnimeRef} />\r\n    </StylesProvider>\r\n  )\r\n}\r\n\r\nexport default MarketCorrelationMatrixPage\r\n","'use strict';\n\nvar generate = require('./generate');\n\nvar alphabet = require('./alphabet'); // Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\n\n\nvar REDUCE_TIME = 1567752802062; // don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\n\nvar version = 7; // Counter is used when shortid is called multiple times in one second.\n\nvar counter; // Remember the last time shortid was called in case counter is needed.\n\nvar previousSeconds;\n/**\n * Generate unique id\n * Returns string id\n */\n\nfunction build(clusterWorkerId) {\n  var str = '';\n  var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n  if (seconds === previousSeconds) {\n    counter++;\n  } else {\n    counter = 0;\n    previousSeconds = seconds;\n  }\n\n  str = str + generate(version);\n  str = str + generate(clusterWorkerId);\n\n  if (counter > 0) {\n    str = str + generate(counter);\n  }\n\n  str = str + generate(seconds);\n  return str;\n}\n\nmodule.exports = build;","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\nvar shuffled;\n\nfunction reset() {\n  shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n  if (!_alphabet_) {\n    if (alphabet !== ORIGINAL) {\n      alphabet = ORIGINAL;\n      reset();\n    }\n\n    return;\n  }\n\n  if (_alphabet_ === alphabet) {\n    return;\n  }\n\n  if (_alphabet_.length !== ORIGINAL.length) {\n    throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n  }\n\n  var unique = _alphabet_.split('').filter(function (item, ind, arr) {\n    return ind !== arr.lastIndexOf(item);\n  });\n\n  if (unique.length) {\n    throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n  }\n\n  alphabet = _alphabet_;\n  reset();\n}\n\nfunction characters(_alphabet_) {\n  setCharacters(_alphabet_);\n  return alphabet;\n}\n\nfunction setSeed(seed) {\n  randomFromSeed.seed(seed);\n\n  if (previousSeed !== seed) {\n    reset();\n    previousSeed = seed;\n  }\n}\n\nfunction shuffle() {\n  if (!alphabet) {\n    setCharacters(ORIGINAL);\n  }\n\n  var sourceArray = alphabet.split('');\n  var targetArray = [];\n  var r = randomFromSeed.nextValue();\n  var characterIndex;\n\n  while (sourceArray.length > 0) {\n    r = randomFromSeed.nextValue();\n    characterIndex = Math.floor(r * sourceArray.length);\n    targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n  }\n\n  return targetArray.join('');\n}\n\nfunction getShuffled() {\n  if (shuffled) {\n    return shuffled;\n  }\n\n  shuffled = shuffle();\n  return shuffled;\n}\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\n\n\nfunction lookup(index) {\n  var alphabetShuffled = getShuffled();\n  return alphabetShuffled[index];\n}\n\nfunction get() {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n  get: get,\n  characters: characters,\n  seed: setSeed,\n  lookup: lookup,\n  shuffled: getShuffled\n};","'use strict'; // Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\n\nfunction getNextValue() {\n  seed = (seed * 9301 + 49297) % 233280;\n  return seed / 233280.0;\n}\n\nfunction setSeed(_seed_) {\n  seed = _seed_;\n}\n\nmodule.exports = {\n  nextValue: getNextValue,\n  seed: setSeed\n};","'use strict';\n\nmodule.exports = require('./lib/index');","'use strict';\n\nmodule.exports = 0;","'use strict';\n\nvar alphabet = require('./alphabet');\n\nvar random = require('./random/random-byte');\n\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n  var loopCounter = 0;\n  var done;\n  var str = '';\n\n  while (!done) {\n    str = str + format(random, alphabet.get(), 1);\n    done = number < Math.pow(16, loopCounter + 1);\n    loopCounter++;\n  }\n\n  return str;\n}\n\nmodule.exports = generate;"],"sourceRoot":""}