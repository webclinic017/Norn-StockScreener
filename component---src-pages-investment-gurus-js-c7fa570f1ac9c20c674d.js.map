{"version":3,"sources":["webpack:///./src/components/investment-gurus/investmentGurus.js","webpack:///./src/pages/investment-gurus.js","webpack:///./src/components/investment-gurus/investmentGurus.module.scss"],"names":["InvestmentGurus","loadingAnimeRef","useState","hideColState","setHideColState","modalWindowRef","useRef","popModalWindow","popPureModal","showColListRef","getTableCol","showColList","current","Object","keys","map","key","SymbolNameField","text","hide","field","headerName","width","type","PureFieldWithValueCheck","PercentField","KMBTField","reduce","accumulator","currentValue","push","tableCol","setTableCol","fetchStockData","useFetch","cachePolicy","fetchGurusData","getData","url","fetchObj","a","get","resp_data","response","ok","getGurusData","Promise","all","then","allResponses","console","log","length","gurus_data","manager_list","output","symbol","index","stockInfo","o","id","Symbol","Close","Number","MAX_VALUE","PE","PB","Dividend","High52","Low52","PerfWeek","PerfMonth","PerfQuarter","PerfHalfY","PerfYear","PerfYTD","GurusCount","GurusValue","forEach","val","gurus_count","gurus_value","setDataRefDesc","Typography","style","margin","Link","href","FinvizUrl","target","rel","paddingRight","DataromaUrl","ZacksUrl","InsidermonkeyUrl","renderDataRefDesc","setRowData","setLoading","catch","dataRefDesc","rowData","useEffect","className","investmentGurusStyle","container","showColumn","table","rows","columns","rowsPerPageOptions","autoPageSize","components","NoRowsOverlay","DefaultDataGridTable","disableSelectionOnClick","onColumnVisibilityChange","param","tempHideColState","InvestmentGurusPage","getLoading","StylesProvider","injectFirst","module","exports"],"mappings":"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","file":"component---src-pages-investment-gurus-js-c7fa570f1ac9c20c674d.js","sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\r\nimport { DataGrid } from '@mui/x-data-grid'\r\nimport FormControlLabel from '@mui/material/FormControlLabel'\r\nimport Checkbox from '@mui/material/Checkbox'\r\nimport Link from '@mui/material/Link'\r\nimport Typography from '@mui/material/Typography'\r\nimport useFetch from 'use-http'\r\n\r\nimport ModalWindow from '../modalWindow'\r\nimport DefaultDataGridTable from '../defaultDataGridTable'\r\nimport { SymbolNameField, PureFieldWithValueCheck, PercentField, KMBTField } from '../../common/reactUtils'\r\nimport { FinvizUrl, DataromaUrl, ZacksUrl, InsidermonkeyUrl } from '../../common/common'\r\n\r\nimport investmentGurusStyle from './investmentGurus.module.scss'\r\nimport '../muiTablePagination.css'\r\n\r\nconst InvestmentGurus = ({ loadingAnimeRef }) => {\r\n\r\n  const [hideColState, setHideColState] = useState({})\r\n\r\n  const modalWindowRef = useRef({\r\n    popModalWindow: null,\r\n    popPureModal: null,\r\n  })\r\n\r\n  const showColListRef = useRef({})\r\n\r\n  const getTableColTemplate = (showColList) => {\r\n    return Object.keys(showColList).map((key) => {\r\n      if (key === 'Symbol') {\r\n        return SymbolNameField(key, showColList[key].text, 130, key in hideColState ? hideColState[key] : showColList[key].hide)\r\n      } else if (key === 'GurusCount'){\r\n        return {\r\n          field: key, headerName: showColList[key].text, width: 170, type: 'number', hide: key in hideColState ? hideColState[key] : showColList[key].hide\r\n        }\r\n      } else if (key === 'Close' || key === 'PE' || key === 'PB') {\r\n        return PureFieldWithValueCheck(key, showColList[key].text, 110, 2, key in hideColState ? hideColState[key] : showColList[key].hide)\r\n      } else if (key === 'Dividend' || key === 'High52' || key === 'Low52' || \r\n        key === 'PerfWeek' || key === 'PerfMonth' || key === 'PerfQuarter' || key === 'PerfHalfY' || key === 'PerfYear' || key === 'PerfYTD') {\r\n        return PercentField(key, showColList[key].text, 150, key in hideColState ? hideColState[key] : showColList[key].hide)\r\n      } else {\r\n        return KMBTField(key, showColList[key].text, 150, 2, key in hideColState ? hideColState[key] : showColList[key].hide)\r\n      }\r\n    })\r\n  }\r\n\r\n  const getTableCol = () => {\r\n    return getTableColTemplate(showColListRef.current).reduce((accumulator, currentValue) => {\r\n      accumulator.push(currentValue)\r\n      return accumulator\r\n    }, [])\r\n  }\r\n  const [tableCol, setTableCol] = useState(getTableCol())\r\n\r\n  const renderDataRefDesc = (manager_list) => {\r\n    return <>\r\n      <Typography style={{ margin: \"10px 0px\" }}>\r\n        {\"Data Reference: \"}\r\n        <Link href={FinvizUrl} target=\"_blank\" rel=\"noreferrer noopener\" style={{ paddingRight: \"15px\" }}>\r\n          <span>{\"Finviz\"}</span>\r\n        </Link>\r\n        <Link href={DataromaUrl} target=\"_blank\" rel=\"noreferrer noopener\" style={{ paddingRight: \"15px\" }}>\r\n          <span>{\"Dataroma\"}</span>\r\n        </Link>\r\n        <Link href={ZacksUrl} target=\"_blank\" rel=\"noreferrer noopener\" style={{ paddingRight: \"15px\" }}>\r\n          <span>{\"Zacks\"}</span>\r\n        </Link>\r\n        <Link href={InsidermonkeyUrl} target=\"_blank\" rel=\"noreferrer noopener\" style={{ paddingRight: \"15px\" }}>\r\n          <span>{\"Insider Monkey\"}</span>\r\n        </Link>\r\n        <br />\r\n        {\"More Gurus Activity: \"}\r\n        {manager_list.map((val) => {\r\n          console.log(val)\r\n          return <>\r\n            <Link href={val[\"link\"]} target=\"_blank\" rel=\"noreferrer noopener\" style={{ paddingRight: \"10px\" }}>\r\n              <span>{val[\"name\"]}</span>\r\n            </Link>\r\n            {\" \"}\r\n          </>\r\n        })}\r\n      </Typography>\r\n    </>\r\n  }\r\n\r\n  const fetchStockData = useFetch({ cachePolicy: 'no-cache' })\r\n  const fetchGurusData = useFetch({ cachePolicy: 'no-cache' })\r\n  const getData = async (url, fetchObj) => {\r\n    const resp_data = await fetchObj.get(url)\r\n    if (fetchObj.response.ok && resp_data) {\r\n      return resp_data\r\n    }\r\n    else {\r\n      return null\r\n    }\r\n  }\r\n  const getGurusData = () => {\r\n    Promise.all([\r\n      getData(\"/norn-data/stock/stat.json\", fetchStockData),\r\n      getData('/norn-data/gurus/gurus-table.json', fetchGurusData),\r\n    ]).then((allResponses) => {\r\n      console.log(allResponses)\r\n      if (allResponses.length === 2 && allResponses[0] !== null && allResponses[1] !== null) {\r\n        let gurus_data = allResponses[1][\"data\"]\r\n        let manager_list = allResponses[1][\"manager_list\"]\r\n        let output = Object.keys(gurus_data).map((symbol, index) => {\r\n          let stockInfo = allResponses[0][symbol]\r\n          let o = {\r\n            id: index,\r\n            Symbol: symbol,\r\n            Close: stockInfo !== undefined && stockInfo !== null && stockInfo['Close'] !== '-' ? stockInfo['Close'] : -Number.MAX_VALUE,\r\n            PE: stockInfo !== undefined && stockInfo !== null && stockInfo['P/E'] !== '-' ? stockInfo['P/E'] : Number.MAX_VALUE,\r\n            PB: stockInfo !== undefined && stockInfo !== null && stockInfo['P/B'] !== '-' ? stockInfo['P/B'] : Number.MAX_VALUE,\r\n            Dividend: stockInfo !== undefined && stockInfo !== null && stockInfo['Dividend %'] !== '-' ? stockInfo['Dividend %'] : -Number.MAX_VALUE,\r\n            High52: stockInfo !== undefined && stockInfo !== null && stockInfo['52W High'] !== '-' ? stockInfo['52W High'] : -Number.MAX_VALUE,\r\n            Low52: stockInfo !== undefined && stockInfo !== null && stockInfo['52W Low'] !== '-' ? stockInfo['52W Low'] : -Number.MAX_VALUE,\r\n            PerfWeek: stockInfo !== undefined && stockInfo !== null && stockInfo['Perf Week'] !== '-' ? stockInfo['Perf Week'] : -Number.MAX_VALUE,\r\n            PerfMonth: stockInfo !== undefined && stockInfo !== null && stockInfo['Perf Month'] !== '-' ? stockInfo['Perf Month'] : -Number.MAX_VALUE,\r\n            PerfQuarter: stockInfo !== undefined && stockInfo !== null && stockInfo['Perf Quarter'] !== '-' ? stockInfo['Perf Quarter'] : -Number.MAX_VALUE,\r\n            PerfHalfY: stockInfo !== undefined && stockInfo !== null && stockInfo['Perf Half Y'] !== '-' ? stockInfo['Perf Half Y'] : -Number.MAX_VALUE,\r\n            PerfYear: stockInfo !== undefined && stockInfo !== null && stockInfo['Perf Year'] !== '-' ? stockInfo['Perf Year'] : -Number.MAX_VALUE,\r\n            PerfYTD: stockInfo !== undefined && stockInfo !== null && stockInfo['Perf YTD'] !== '-' ? stockInfo['Perf YTD'] : -Number.MAX_VALUE,\r\n            GurusCount: 0,\r\n            GurusValue: 0\r\n          }\r\n          manager_list.forEach((val) => {\r\n            o[val[\"name\"]] = 0\r\n          })\r\n\r\n          let gurus_count = 0\r\n          let gurus_value = 0\r\n          gurus_data[symbol].forEach((val)=>{\r\n            o[val[\"name\"]] = val[\"value\"]\r\n            gurus_count += 1\r\n            gurus_value += val[\"value\"]\r\n          })\r\n          o.GurusCount = gurus_count\r\n          o.GurusValue = gurus_value\r\n          return o\r\n        })\r\n\r\n        showColListRef.current = {\r\n          Symbol: { hide: false, text: 'Symbol' },\r\n          Close: { hide: false, text: 'Price' },\r\n          PE: { hide: false, text: 'P/E' },\r\n          PB: { hide: false, text: 'P/B' },\r\n          Dividend: { hide: false, text: 'Dividend %' },\r\n          High52: { hide: false, text: '52W High' },\r\n          Low52: { hide: false, text: '52W Low' },\r\n          PerfWeek: { hide: false, text: 'Perf Week' },\r\n          PerfMonth: { hide: false, text: 'Perf Month' },\r\n          PerfQuarter: { hide: false, text: 'Perf Quarter' },\r\n          PerfHalfY: { hide: false, text: 'Perf Half Y' },\r\n          PerfYear: { hide: false, text: 'Perf Year' },\r\n          PerfYTD: { hide: false, text: 'Perf YTD' },\r\n          GurusCount: { hide: false, text: 'Gurus Count' },\r\n          GurusValue: { hide: false, text: 'Gurus Value' },\r\n        }\r\n\r\n        manager_list.forEach((val) => {\r\n          showColListRef.current[val[\"name\"]] = { hide: false, text: val[\"name\"] }\r\n        })\r\n\r\n        setDataRefDesc(renderDataRefDesc(manager_list))\r\n        setTableCol(getTableCol())\r\n        setRowData(output)\r\n      } else {\r\n        modalWindowRef.current.popModalWindow(<div>Load some data failed</div>)\r\n      }\r\n      loadingAnimeRef.current.setLoading(false)\r\n    }).catch(() => {\r\n      modalWindowRef.current.popModalWindow(<div>Can't get data</div>)\r\n      loadingAnimeRef.current.setLoading(false)\r\n    })\r\n  }\r\n\r\n  const [dataRefDesc, setDataRefDesc] = useState(<></>)\r\n\r\n  const [rowData, setRowData] = useState([])\r\n\r\n  useEffect(() => {\r\n    // componentDidMount is here!\r\n    // componentDidUpdate is here!\r\n    getGurusData()\r\n\r\n    return () => {\r\n      // componentWillUnmount is here!\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <div className={investmentGurusStyle.container}>\r\n        <div className={investmentGurusStyle.showColumn}>\r\n          {dataRefDesc}\r\n        </div>\r\n        <div className={investmentGurusStyle.table}>\r\n          <DataGrid rows={rowData} columns={tableCol} rowsPerPageOptions={[]} autoPageSize={true} components={{ NoRowsOverlay: DefaultDataGridTable, }} disableSelectionOnClick onColumnVisibilityChange={(param) => {\r\n            let tempHideColState = hideColState\r\n            tempHideColState[param['field']] = !param['isVisible']\r\n            setHideColState(tempHideColState)\r\n          }}/>\r\n        </div>\r\n      </div>\r\n      <ModalWindow modalWindowRef={modalWindowRef} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default InvestmentGurus\r\n","import React, { useRef } from 'react'\r\nimport { StylesProvider } from '@mui/styles'\r\n\r\nimport Layout from '../components/layout'\r\nimport InvestmentGurus from '../components/investment-gurus/investmentGurus'\r\nimport LoadingAnime from '../components/loadingAnime'\r\nimport SEO from '../components/seo'\r\n\r\nconst InvestmentGurusPage = () => {\r\n\r\n  const loadingAnimeRef = useRef({\r\n    getLoading: null,\r\n    setLoading: null\r\n  })\r\n\r\n  return (\r\n    <StylesProvider injectFirst>\r\n      <SEO />\r\n      <Layout >\r\n        <InvestmentGurus loadingAnimeRef={loadingAnimeRef} />\r\n      </Layout>\r\n      <LoadingAnime loadingAnimeRef={loadingAnimeRef} />\r\n    </StylesProvider>\r\n  )\r\n}\r\n\r\nexport default InvestmentGurusPage\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"investmentGurus-module--container--1Nn47\",\"showColumn\":\"investmentGurus-module--showColumn--1JNCh\",\"table\":\"investmentGurus-module--table--1PNC9\"};"],"sourceRoot":""}