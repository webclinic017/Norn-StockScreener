{"version":3,"sources":["webpack:///./src/components/industry-insiders/insidersTradeListTable.js","webpack:///./src/pages/insiders-trade-list.js","webpack:///(webpack)/buildin/module.js","webpack:///./src/components/industry-insiders/insidersTradeListTable.module.scss"],"names":["InsidersTradeListTable","loadingAnimeRef","modalWindowRef","useRef","popModalWindow","popPureModal","tableColList","hide","text","getData","url","fetchObj","a","get","resp_data","response","ok","fetchStockData","useFetch","cachePolicy","fetchInsidersData","useState","rowData","setRowData","hideColState","setHideColState","useEffect","industry","url_params","URL","getUrl","searchParams","has","current","setLoading","Promise","all","then","allResponses","length","output","map","value","index","stockInfo","id","date","Date","symbol","transaction","close","Number","MAX_VALUE","PE","PB","dividend","high52","low52","perfWeek","perfMonth","perfQuarter","perfHalfY","perfYear","perfYTD","catch","getInsidersTradeListTable","className","insidersTradeListTableStyle","container","table","rows","columns","field","headerName","width","type","renderCell","params","moment","row","format","SymbolNameField","style","fontWeight","color","Math","sign","parseFloat","KMBTField","PureFieldWithValueCheck","PercentField","ColorPercentField","rowsPerPageOptions","autoPageSize","components","NoRowsOverlay","DefaultDataGridTable","disableSelectionOnClick","onColumnVisibilityChange","param","tempHideColState","InsidersTradeListPage","getLoading","StylesProvider","injectFirst","module","exports","webpackPolyfill","deprecate","paths","children","Object","defineProperty","enumerable","l","i"],"mappings":"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","file":"component---src-pages-insiders-trade-list-js-9a446390235c0699603e.js","sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\r\nimport { DataGrid } from '@mui/x-data-grid'\r\nimport useFetch from 'use-http'\r\nimport moment from 'moment'\r\n\r\nimport ModalWindow from '../modalWindow'\r\nimport DefaultDataGridTable from '../defaultDataGridTable'\r\nimport { SymbolNameField, PureFieldWithValueCheck, PercentField, ColorPercentField, KMBTField } from '../../common/reactUtils'\r\nimport { getUrl } from '../../common/utils'\r\n\r\nimport insidersTradeListTableStyle from './insidersTradeListTable.module.scss'\r\nimport '../muiTablePagination.css'\r\n\r\nconst InsidersTradeListTable = ({ loadingAnimeRef }) => {\r\n\r\n    const modalWindowRef = useRef({\r\n        popModalWindow: null,\r\n        popPureModal: null,\r\n    })\r\n\r\n    const tableColList = {\r\n        Symbol: { hide: false, text: 'Symbol' },\r\n        Transaction: { hide: false, text: 'Transaction' },\r\n        Value: { hide: false, text: 'Value' },\r\n        Close: { hide: false, text: 'Price' },\r\n        PE: { hide: false, text: 'P/E' },\r\n        PB: { hide: false, text: 'P/B' },\r\n        Dividend: { hide: false, text: 'Dividend %' },\r\n        High52: { hide: false, text: '52W High' },\r\n        Low52: { hide: false, text: '52W Low' },\r\n        PerfWeek: { hide: false, text: 'Perf Week' },\r\n        PerfMonth: { hide: false, text: 'Perf Month' },\r\n        PerfQuarter: { hide: false, text: 'Perf Quarter' },\r\n        PerfHalfY: { hide: false, text: 'Perf Half Y' },\r\n        PerfYear: { hide: false, text: 'Perf Year' },\r\n        PerfYTD: { hide: false, text: 'Perf YTD' },\r\n    }\r\n\r\n    const getData = async (url, fetchObj) => {\r\n        const resp_data = await fetchObj.get(url)\r\n        if (fetchObj.response.ok && resp_data) {\r\n            return resp_data\r\n        }\r\n        else {\r\n            return null\r\n        }\r\n    }\r\n\r\n    const genTableColTemplate = () => {\r\n        return [\r\n            {\r\n                field: 'date',\r\n                headerName: 'Date',\r\n                width: 120,\r\n                type: 'date',\r\n                renderCell: (params) => (\r\n                    <span>{moment(params.row['date']).format('MM/DD/YYYY')}</span>\r\n                ),\r\n                hide: 'date' in hideColState ? hideColState['date'] : false\r\n            },\r\n            SymbolNameField('symbol', 'Symbol', 130, 'symbol' in hideColState ? hideColState['symbol'] : false),\r\n            {\r\n                field: 'transaction',\r\n                headerName: 'Transaction',\r\n                width: 160,\r\n                type: 'number',\r\n                renderCell: (params) => (\r\n                    params.value === \"-\" ?\r\n                        <span>-</span> :\r\n                        <span style={{ fontWeight: 500, color: Math.sign(parseFloat(params.value)) === 1 ? 'green' : Math.sign(parseFloat(params.value)) === -1 ? 'red' : '' }}>{params.value === 1 ? 'Buy' : (params.value === -1 ? 'Sale' : 'Option Exercise')}</span>\r\n                ),\r\n                hide: 'transaction' in hideColState ? hideColState['transaction'] : tableColList['Transaction'].hide\r\n            },\r\n            KMBTField(\"value\", tableColList.Value.text, 130, 2, \"value\" in hideColState ? hideColState[\"value\"] : tableColList['Value'].hide),\r\n            PureFieldWithValueCheck(\"close\", tableColList.Close.text, 110, 2, \"close\" in hideColState ? hideColState[\"close\"] : tableColList['Close'].hide),\r\n            PureFieldWithValueCheck(\"PE\", tableColList.PE.text, 110, 2, \"PE\" in hideColState ? hideColState[\"PE\"] : tableColList['PE'].hide),\r\n            PureFieldWithValueCheck(\"PB\", tableColList.PB.text, 110, 2, \"PB\" in  hideColState ? hideColState[\"PB\"] : tableColList['PB'].hide),\r\n            PercentField(\"dividend\", tableColList.Dividend.text, 150, \"dividend\" in hideColState ? hideColState[\"dividend\"] : tableColList['Dividend'].hide),\r\n            PercentField(\"high52\", tableColList.High52.text, 150, \"high52\" in  hideColState? hideColState[\"high52\"] : tableColList['High52'].hide),\r\n            PercentField(\"low52\", tableColList.Low52.text, 150, \"low52\" in hideColState ? hideColState[\"low52\"] :  tableColList['Low52'].hide),\r\n            ColorPercentField(\"perfWeek\", tableColList.PerfWeek.text, 150, 2, \"perfWeek\" in hideColState ? hideColState[\"perfWeek\"] : tableColList['PerfWeek'].hide, 500),\r\n            ColorPercentField(\"perfMonth\", tableColList.PerfMonth.text, 150, 2, \"perfMonth\" in   hideColState? hideColState[\"perfMonth\"] : tableColList['PerfMonth'].hide, 500),\r\n            ColorPercentField(\"perfQuarter\", tableColList.PerfQuarter.text, 160, 2, \"perfQuarter\" in hideColState ? hideColState[\"perfQuarter\"] : tableColList['PerfQuarter'].hide, 500),\r\n            ColorPercentField(\"perfHalfY\", tableColList.PerfHalfY.text, 150, 2, \"perfHalfY\" in  hideColState? hideColState[\"perfHalfY\"] : tableColList['PerfHalfY'].hide, 500),\r\n            ColorPercentField(\"perfYear\", tableColList.PerfYear.text, 150, 2, \"perfYear\" in  hideColState ? hideColState[\"perfYear\"] :  tableColList['PerfYear'].hide, 500),\r\n            ColorPercentField(\"perfYTD\", tableColList.PerfYTD.text, 150, 2, \"perfYTD\" in hideColState ? hideColState[\"perfYTD\"] : tableColList['PerfYTD'].hide, 500),\r\n        ]\r\n    }\r\n\r\n    const fetchStockData = useFetch({ cachePolicy: 'no-cache' })\r\n    const fetchInsidersData = useFetch({ cachePolicy: 'no-cache' })\r\n\r\n    const getInsidersTradeListTable = () => {\r\n        let industry = ''\r\n        let url_params = new URL(getUrl()).searchParams\r\n        if (url_params.has('industry')) {\r\n            industry = url_params.get('industry')\r\n        } else {\r\n            modalWindowRef.current.popModalWindow(<div>Industry parameter not found</div>)\r\n            loadingAnimeRef.current.setLoading(false)\r\n            return\r\n        }\r\n\r\n        Promise.all([\r\n            getData(\"/norn-data/stock/stat.json\", fetchStockData),\r\n            getData('/norn-data/insiders/data/' + industry + '.json', fetchInsidersData),\r\n        ]).then((allResponses) => {\r\n            // console.log(allResponses)\r\n            if (allResponses.length === 2 && allResponses[0] !== null && allResponses[1] !== null) {\r\n                let output = allResponses[1].map((value, index) => {\r\n                    let stockInfo = allResponses[0][value['Symbol']]\r\n                    let o = {\r\n                        id: index,\r\n                        date: new Date(value['Date']),\r\n                        symbol: value['Symbol'],\r\n                        transaction: value['Transaction'],\r\n                        value: value['Value'],\r\n                        close: stockInfo !== undefined && stockInfo !== null && stockInfo['Close'] !== '-' ? stockInfo['Close'] : -Number.MAX_VALUE,\r\n                        PE: stockInfo !== undefined && stockInfo !== null && stockInfo['P/E'] !== '-' ? stockInfo['P/E'] : Number.MAX_VALUE,\r\n                        PB: stockInfo !== undefined && stockInfo !== null && stockInfo['P/B'] !== '-' ? stockInfo['P/B'] : Number.MAX_VALUE,\r\n                        dividend: stockInfo !== undefined && stockInfo !== null && stockInfo['Dividend %'] !== '-' ? stockInfo['Dividend %'] : -Number.MAX_VALUE,\r\n                        high52: stockInfo !== undefined && stockInfo !== null && stockInfo['52W High'] !== '-' ? stockInfo['52W High'] : -Number.MAX_VALUE,\r\n                        low52: stockInfo !== undefined && stockInfo !== null && stockInfo['52W Low'] !== '-' ? stockInfo['52W Low'] : -Number.MAX_VALUE,\r\n                        perfWeek: stockInfo !== undefined && stockInfo !== null && stockInfo['Perf Week'] !== '-' ? stockInfo['Perf Week'] : -Number.MAX_VALUE,\r\n                        perfMonth: stockInfo !== undefined && stockInfo !== null && stockInfo['Perf Month'] !== '-' ? stockInfo['Perf Month'] : -Number.MAX_VALUE,\r\n                        perfQuarter: stockInfo !== undefined && stockInfo !== null && stockInfo['Perf Quarter'] !== '-' ? stockInfo['Perf Quarter'] : -Number.MAX_VALUE,\r\n                        perfHalfY: stockInfo !== undefined && stockInfo !== null && stockInfo['Perf Half Y'] !== '-' ? stockInfo['Perf Half Y'] : -Number.MAX_VALUE,\r\n                        perfYear: stockInfo !== undefined && stockInfo !== null && stockInfo['Perf Year'] !== '-' ? stockInfo['Perf Year'] : -Number.MAX_VALUE,\r\n                        perfYTD: stockInfo !== undefined && stockInfo !== null && stockInfo['Perf YTD'] !== '-' ? stockInfo['Perf YTD'] : -Number.MAX_VALUE,\r\n                    }\r\n                    return o\r\n                })\r\n                setRowData(output)\r\n            } else {\r\n                modalWindowRef.current.popModalWindow(<div>Load some data failed</div>)\r\n            }\r\n            loadingAnimeRef.current.setLoading(false)\r\n        }).catch(() => {\r\n            modalWindowRef.current.popModalWindow(<div>Can't get data</div>)\r\n            loadingAnimeRef.current.setLoading(false)\r\n        })\r\n    }\r\n\r\n    const [rowData, setRowData] = useState([])\r\n    const [hideColState, setHideColState] = useState({})\r\n\r\n    useEffect(() => {\r\n        // componentDidMount is here!\r\n        // componentDidUpdate is here!\r\n        getInsidersTradeListTable()\r\n        return () => {\r\n            // componentWillUnmount is here!\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <div className={insidersTradeListTableStyle.container}>\r\n                <div className={insidersTradeListTableStyle.table}>\r\n                    <DataGrid rows={rowData} columns={genTableColTemplate()} rowsPerPageOptions={[]} autoPageSize={true} components={{ NoRowsOverlay: DefaultDataGridTable, }} disableSelectionOnClick onColumnVisibilityChange={(param) => {\r\n                        let tempHideColState = hideColState\r\n                        tempHideColState[param['field']] = !param['isVisible']\r\n                        setHideColState(tempHideColState)\r\n                    }}/>\r\n                </div>\r\n            </div>\r\n            <ModalWindow modalWindowRef={modalWindowRef} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default InsidersTradeListTable\r\n","import React, { useRef } from 'react'\r\nimport { StylesProvider } from '@mui/styles'\r\n\r\nimport Layout from '../components/layout'\r\nimport InsidersTradeListTable from '../components/industry-insiders/insidersTradeListTable'\r\nimport LoadingAnime from '../components/loadingAnime'\r\nimport SEO from '../components/seo'\r\n\r\nconst InsidersTradeListPage = () => {\r\n\r\n    const loadingAnimeRef = useRef({\r\n        getLoading: null,\r\n        setLoading: null\r\n    })\r\n\r\n    return (\r\n        <StylesProvider injectFirst>\r\n            <SEO />\r\n            <Layout >\r\n                <InsidersTradeListTable loadingAnimeRef={loadingAnimeRef} />\r\n            </Layout>\r\n            <LoadingAnime loadingAnimeRef={loadingAnimeRef} />\r\n        </StylesProvider>\r\n    )\r\n}\r\n\r\nexport default InsidersTradeListPage\r\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"insidersTradeListTable-module--container--mL0Aj\",\"showColumn\":\"insidersTradeListTable-module--showColumn--3gHL1\",\"table\":\"insidersTradeListTable-module--table--jS76G\"};"],"sourceRoot":""}