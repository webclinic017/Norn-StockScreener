{"version":3,"sources":["webpack:///./src/components/options/options.js","webpack:///./src/pages/options.js","webpack:///./node_modules/@mui/icons-material/BarChartSharp.js","webpack:///./src/components/monteCarloChart.js","webpack:///./node_modules/@mui/icons-material/Info.js","webpack:///./src/components/options/options.module.scss"],"names":["ParameterNodesField","queryParameterRef","queryParameterCurrentRef","SelfQuery_Def","parameters","map","value","index","inputRef","name","display_name","gridsm","Grid","item","md","xs","key","shortid","generate","noValidate","autoComplete","TextField","id","className","optionsStyle","valueText","label","variant","defaultValue","size","genParameterField","current","val","FetchNornFinanceAPIServer","FetchNornFinanceAPIServerRef","useFetchNornFinanceAPIServer","useFetch","NornFinanceAPIServerDomain","cachePolicy","server","Options","loadingAnimeRef","modalWindowRef","useRef","popModalWindow","popPureModal","tableColList","hide","text","description","genTableColTemplate","SymbolNameField","hideColState","PureFieldWithValueCheck","field","headerName","width","type","renderCell","params","moment","row","format","Number","MAX_VALUE","undefined","style","fontWeight","color","getRedLevel","getBlueLevel","toFixed","PercentField","ColorPercentField","ColorPosGreenNegRedField","IconButton","aria-haspopup","onClick","setLoading","query_string","workdayCount","Date","toISOString","split","Promise","all","GetDataByFetchObj","then","allResponses","console","log","length","chartData","cost","info","forEach","mean_point","mean_index","d","parseInt","data_points","data_i","String","padStart","push","data","iteration","error","catch","fontSize","fetchOptionsData","renderTable","resp","calls","puts","symbol","stock_price","ewma_his_vol","contracts","expiry_date","extra_data_func","calls_puts","kind","cp","v","o","stockPrice","EWMAHisVol","expiryDate","lastTradeDate","strike","lastPrice","bid","ask","change","percentChange","volume","openInterest","impliedVolatility","BSM_EWMAHisVol","MC_EWMAHisVol","BT_EWMAHisVol","delta","gamma","rho","theta","vega","KellyCriterion_buy","KellyCriterion_sell","KellyCriterion_MU_0_buy","KellyCriterion_MU_0_sell","cnt","sum","Math","abs","day_diff","floor","parse","slice","concat","i","setCallsData","setPutsData","refreshData","file_name","startsWith","setDisplayQuery","useState","callsData","putsData","setHideColState","arg","setArg","displayQuery","ws","setWs","createRef","useEffect","Options_Def","useInterval","readyState","WebSocket","OPEN","send","onopen","onmessage","e","message","JSON","commonStyle","defaultFont","container","spacing","FormControl","optionsTableSelect","InputLabel","htmlFor","Select","native","displayEmpty","onChange","event","target","queryPannel","display","parameterTitle","Typography","gutterBottom","component","arrow","title","whiteSpace","lineHeight","textAlign","QueryNote","window","open","NornFinanceAPIServerGithub","parameterBlock","Box","justifyContent","ThemeProvider","theme","createTheme","palette","primary","blue","Button","isMobile","queryBtnMobile","queryBtn","startIcon","args","reduce","accumulator","currentValue","currentIndex","Object","keys","join","table","rows","columns","rowsPerPageOptions","autoPageSize","components","NoRowsOverlay","DefaultDataGridTable","disableSelectionOnClick","onColumnVisibilityChange","param","tempHideColState","initialState","filter","filterModel","items","columnField","operatorValue","sorting","sortModel","sort","OptionsPage","getLoading","StylesProvider","injectFirst","_interopRequireDefault","defineProperty","exports","default","_createSvgIcon","_jsxRuntime","_default","jsx","CustomizedLabel","render","this","props","x","y","stroke","dy","fill","textAnchor","PureComponent","MonteCarloChart","show_mean_label","modal_mode","dataLines","Array","dataKey","dot","strokeWidth","optionReferenceLines","position","strokeDasharray","xAxisLabel","offset","chartStyle","innerWidth","height","innerHeight","maxWidth","maxHeight","margin","top","right","left","bottom","domain","itemSorter","module"],"mappings":"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","file":"component---src-pages-options-js-dee345e504587d5b3827.js","sourcesContent":["import React, { useState, useEffect, useRef, createRef } from 'react'\r\nimport SearchIcon from '@mui/icons-material/Search'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport BarChartSharpIcon from '@mui/icons-material/BarChartSharp'\r\nimport InfoIcon from '@mui/icons-material/Info'\r\nimport TextField from '@mui/material/TextField'\r\nimport Button from '@mui/material/Button'\r\nimport Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport { DataGrid } from '@mui/x-data-grid'\r\nimport InputLabel from '@mui/material/InputLabel'\r\nimport FormControl from '@mui/material/FormControl'\r\nimport Typography from '@mui/material/Typography'\r\nimport Select from '@mui/material/Select'\r\nimport { blue } from '@mui/material/colors'\r\nimport { createTheme } from '@mui/material/styles'\r\nimport { ThemeProvider } from '@mui/styles'\r\nimport shortid from 'shortid'\r\nimport useFetch from 'use-http'\r\nimport moment from 'moment'\r\nimport { isMobile } from 'react-device-detect'\r\n\r\nimport ModalWindow from '../modalWindow'\r\nimport DefaultDataGridTable from '../defaultDataGridTable'\r\n\r\nimport { NornFinanceAPIServerDomain, QueryNote, NornFinanceAPIServerGithub } from '../../common/common'\r\nimport { getRedLevel, getBlueLevel, workdayCount } from '../../common/utils'\r\nimport { useInterval, GetDataByFetchObj, SymbolNameField, PureFieldWithValueCheck, PercentField, ColorPercentField, ColorPosGreenNegRedField, NoMaxWidthTooltip } from '../../common/reactUtils'\r\nimport { Options_Def, SelfQuery_Def } from '../../common/optionsDef'\r\nimport MonteCarloChart from '../monteCarloChart'\r\n\r\nimport commonStyle from '../common.module.scss'\r\nimport optionsStyle from './options.module.scss'\r\n\r\n\r\n// query parameter\r\nconst genParameterField = (inputRef, name, value, display_name, gridsm) => {\r\n  // add key to force re-render component\r\n  return (\r\n    <Grid item md={gridsm} xs={12} key={shortid.generate()}>\r\n      <form noValidate autoComplete=\"off\">\r\n        <TextField id={name} className={optionsStyle.valueText} label={display_name} variant=\"outlined\" defaultValue={value} size=\"small\" inputRef={inputRef} />\r\n      </form>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nconst ParameterNodesField = ({ queryParameterRef, queryParameterCurrentRef }) => {\r\n  return SelfQuery_Def.parameters.map((value, index) => {\r\n    return (\r\n      genParameterField(queryParameterRef.current[index], value.name, queryParameterCurrentRef.current === null ? value.val : queryParameterCurrentRef.current[index], value.display_name, value.gridsm)\r\n    )\r\n  })\r\n}\r\n\r\nconst FetchNornFinanceAPIServer = ({FetchNornFinanceAPIServerRef}) => {\r\n  const useFetchNornFinanceAPIServer = useFetch(\"https://\" + NornFinanceAPIServerDomain, { cachePolicy: 'no-cache' })\r\n  FetchNornFinanceAPIServerRef.current.server = useFetchNornFinanceAPIServer\r\n  return <></>\r\n}\r\n\r\nconst Options = ({loadingAnimeRef}) => {\r\n\r\n  const modalWindowRef = useRef({\r\n    popModalWindow: null,\r\n    popPureModal: null,\r\n  })\r\n  \r\n  const FetchNornFinanceAPIServerRef = useRef({\r\n    server: null\r\n  })\r\n\r\n  const tableColList = {\r\n    Symbol: { hide: false, text: 'Symbol' },\r\n    StockPrice: { hide: false, text: 'Price (Stock)' },\r\n    ExpiryDate: { hide: false, text: 'Expiry' },\r\n    Strike: { hide: false, text: 'Strike' },\r\n    LastPrice: { hide: false, text: 'Last Price' },\r\n    AvgEWMA: { hide: false, text: 'Valuation (Avg)'},\r\n    PriceBias: { hide: false, text: 'Bias (Price)', description: '| Last Price - Valuation (Avg) | / Last Price' },\r\n    VolBias: { hide: false, text: 'Bias (Vol.)' },\r\n    PriceStrikeRatio: { hide: false, text: 'P/S (%)', description: 'Last Price / Strike' },\r\n    PriceStrikeYearRatio: { hide: false, text: 'P/S (Y%)', description: 'Last Price / Strike (Year)' },\r\n    DistanceRatio: { hide: false, text: 'Dist (%)', description: '| Price (Stock) - Strike | / Strike' },\r\n    KellyCriterion_buy: { hide: true, text: 'Kelly (Buy)', description: 'Kelly Criterion' },\r\n    KellyCriterion_sell: { hide: true, text: 'Kelly (Sell)', description: 'Kelly Criterion' },\r\n    KellyCriterion_MU_0_buy: { hide: false, text: 'Kelly (Buy, MU0)', description: 'Kelly Criterion, MU=0' },\r\n    KellyCriterion_MU_0_sell: { hide: false, text: 'Kelly (Sell, MU0)', description: 'Kelly Criterion, MU=0' },\r\n    Delta: { hide: false, text: 'δ (Delta)' },\r\n    Gamma: { hide: false, text: 'γ (Gamma)' },\r\n    Rho: { hide: false, text: 'ρ (Rho)' },\r\n    Theta: { hide: false, text: 'θ (Theta)' },\r\n    Vega: { hide: false, text: 'ν (Vega)' },\r\n    LastTradeDate: { hide: false, text: 'Last Trade Date' },\r\n    Bid: { hide: false, text: 'Bid' },\r\n    Ask: { hide: false, text: 'Ask' },\r\n    Change: { hide: true, text: 'Change' },\r\n    PercentChange: { hide: false, text: 'Change (%)' },\r\n    Volume: { hide: false, text: 'Volume' },\r\n    OpenInterest: { hide: false, text: 'Open Interest' },\r\n    ImpliedVolatility: { hide: false, text: 'Implied Volatility' },\r\n    EWMAHisVol: { hide: false, text: 'EWMA Historical Volatility' },\r\n    BSM_EWMAHisVol: { hide: false, text: 'Black Scholes Merton' },\r\n    MC_EWMAHisVol: { hide: false, text: 'Monte Carlo' },\r\n    BT_EWMAHisVol: { hide: false, text: 'Binomial Tree' },\r\n    MCChart: { hide: false, text: 'MC Chart' },\r\n  }\r\n\r\n  const genTableColTemplate = () => {\r\n    return [\r\n      SymbolNameField('symbol', 'Symbol', 115, 'symbol' in hideColState ? hideColState['symbol'] : false),\r\n      PureFieldWithValueCheck(\"stockPrice\", tableColList.StockPrice.text, 125, 2, \"stockPrice\" in hideColState ? hideColState[\"stockPrice\"] : tableColList['StockPrice'].hide),\r\n      {\r\n        field: 'expiryDate',\r\n        headerName: tableColList.ExpiryDate.text,\r\n        width: 120,\r\n        type: 'date',\r\n        renderCell: (params) => (\r\n          <span>{moment(params.row['expiryDate']).format('YYYY-MM-DD')}</span>\r\n        ),\r\n        hide: 'expiryDate' in hideColState ? hideColState['expiryDate'] : tableColList['ExpiryDate'].hide\r\n      },\r\n      PureFieldWithValueCheck(\"strike\", tableColList.Strike.text, 110, 2, \"strike\" in hideColState ? hideColState[\"strike\"] : tableColList['Strike'].hide),\r\n      PureFieldWithValueCheck(\"lastPrice\", tableColList.LastPrice.text, 140, 2, \"lastPrice\" in hideColState ? hideColState[\"lastPrice\"] : tableColList['LastPrice'].hide),\r\n      PureFieldWithValueCheck(\"avgEWMA\", tableColList.AvgEWMA.text, 140, 2, \"avgEWMA\" in hideColState ? hideColState[\"avgEWMA\"] : tableColList['AvgEWMA'].hide),\r\n      {\r\n        field: \"priceBias\",\r\n        headerName: tableColList.PriceBias.text,\r\n        width: 120,\r\n        type: 'number',\r\n        description: tableColList.PriceBias.description,\r\n        renderCell: (params) => (\r\n          params.value === \"-\" || params.value === -Number.MAX_VALUE || params.value === Number.MAX_VALUE || params.value === null || params.value === undefined || params.value === \"Infinity\" || params.value === 'NaN' ?\r\n            <span>-</span> :\r\n            <span style={{ fontWeight: 500, color: params.row['lastPrice'] > params.row['avgEWMA'] ? getRedLevel(params.value) : params.row['lastPrice'] < params.row['avgEWMA'] ? getBlueLevel(params.value) : '' }}>{params.value.toFixed(2)}</span>\r\n        ),\r\n        hide: \"priceBias\" in hideColState ? hideColState[\"priceBias\"] : tableColList['PriceBias'].hide\r\n      },\r\n      PercentField(\"priceStrikeRatio\", tableColList.PriceStrikeRatio.text, 90, \"priceStrikeRatio\" in hideColState ? hideColState[\"priceStrikeRatio\"] : tableColList['PriceStrikeRatio'].hide, tableColList.PriceStrikeRatio.description),\r\n      PercentField(\"priceStrikeYearRatio\", tableColList.PriceStrikeYearRatio.text, 90, \"priceStrikeYearRatio\" in hideColState ? hideColState[\"priceStrikeRatio\"] : tableColList['PriceStrikeYearRatio'].hide, tableColList.PriceStrikeYearRatio.description),\r\n      PercentField(\"distanceRatio\", tableColList.DistanceRatio.text, 90, \"distanceRatio\" in hideColState ? hideColState[\"distanceRatio\"] : tableColList['DistanceRatio'].hide, tableColList.DistanceRatio.description),\r\n      ColorPercentField(\"KellyCriterion_buy\", tableColList.KellyCriterion_buy.text, 130, 2, \"KellyCriterion_buy\" in hideColState ? hideColState[\"KellyCriterion_buy\"] : tableColList['KellyCriterion_buy'].hide, 500, tableColList.KellyCriterion_buy.description),\r\n      ColorPercentField(\"KellyCriterion_sell\", tableColList.KellyCriterion_sell.text, 130, 2, \"KellyCriterion_sell\" in hideColState ? hideColState[\"KellyCriterion_sell\"] : tableColList['KellyCriterion_sell'].hide, 500, tableColList.KellyCriterion_sell.description),\r\n      ColorPercentField(\"KellyCriterion_MU_0_buy\", tableColList.KellyCriterion_MU_0_buy.text, 130, 2, \"KellyCriterion_MU_0_buy\" in hideColState ? hideColState[\"kellyCriterion_MU_0_buy\"] : tableColList['KellyCriterion_MU_0_buy'].hide, 500, tableColList.KellyCriterion_MU_0_buy.description),\r\n      ColorPercentField(\"KellyCriterion_MU_0_sell\", tableColList.KellyCriterion_MU_0_sell.text, 130, 2, \"KellyCriterion_MU_0_sell\" in hideColState ? hideColState[\"KellyCriterion_MU_0_sell\"] : tableColList['KellyCriterion_MU_0_sell'].hide, 500, tableColList.KellyCriterion_MU_0_sell.description),\r\n      PureFieldWithValueCheck(\"delta\", tableColList.Delta.text, 90, 2, \"delta\" in hideColState ? hideColState[\"delta\"] : tableColList['Delta'].hide),\r\n      PureFieldWithValueCheck(\"gamma\", tableColList.Gamma.text, 90, 2, \"gamma\" in hideColState ? hideColState[\"gamma\"] : tableColList['Gamma'].hide),\r\n      PureFieldWithValueCheck(\"rho\", tableColList.Rho.text, 90, 2, \"rho\" in hideColState ? hideColState[\"rho\"] : tableColList['Rho'].hide),\r\n      PureFieldWithValueCheck(\"theta\", tableColList.Theta.text, 90, 2, \"theta\" in hideColState ? hideColState[\"theta\"] : tableColList['Theta'].hide),\r\n      PureFieldWithValueCheck(\"vega\", tableColList.Vega.text, 90, 2, \"vega\" in hideColState ? hideColState[\"vega\"] : tableColList['Vega'].hide),\r\n      {\r\n        field: 'lastTradeDate',\r\n        headerName: tableColList.LastTradeDate.text,\r\n        width: 145,\r\n        type: 'date',\r\n        renderCell: (params) => (\r\n          <span>{moment(params.row['lastTradeDate']).format('YYYY-MM-DD')}</span>\r\n        ),\r\n        hide: 'lastTradeDate' in hideColState ? hideColState['lastTradeDate'] : tableColList['LastTradeDate'].hide\r\n      },\r\n      PureFieldWithValueCheck(\"bid\", tableColList.Bid.text, 105, 2, \"bid\" in hideColState ? hideColState[\"bid\"] : tableColList['Bid'].hide),\r\n      PureFieldWithValueCheck(\"ask\", tableColList.Ask.text, 105, 2, \"ask\" in hideColState ? hideColState[\"ask\"] : tableColList['Ask'].hide),\r\n      ColorPosGreenNegRedField(\"change\", tableColList.Change.text, 130, \"change\" in hideColState ? hideColState[\"change\"] : tableColList['Change'].hide, 500),\r\n      ColorPercentField(\"percentChange\", tableColList.PercentChange.text, 140, 2, \"percentChange\" in hideColState ? hideColState[\"percentChange\"] : tableColList['PercentChange'].hide, 500),\r\n      PureFieldWithValueCheck(\"volume\", tableColList.Volume.text, 140, 0, \"volume\" in hideColState ? hideColState[\"volume\"] : tableColList['Volume'].hide),\r\n      PureFieldWithValueCheck(\"openInterest\", tableColList.OpenInterest.text, 140, 0, \"openInterest\" in hideColState ? hideColState[\"openInterest\"] : tableColList['OpenInterest'].hide),\r\n      PercentField(\"impliedVolatility\", tableColList.ImpliedVolatility.text, 140, \"impliedVolatility\" in hideColState ? hideColState[\"impliedVolatility\"] : tableColList['ImpliedVolatility'].hide),\r\n      PercentField(\"EWMAHisVol\", tableColList.EWMAHisVol.text, 140, \"EWMAHisVol\" in hideColState ? hideColState[\"EWMAHisVol\"] : tableColList['EWMAHisVol'].hide),\r\n      PureFieldWithValueCheck(\"BSM_EWMAHisVol\", tableColList.BSM_EWMAHisVol.text, 140, 2, \"BSM_EWMAHisVol\" in hideColState ? hideColState[\"BSM_EWMAHisVol\"] : tableColList['BSM_EWMAHisVol'].hide),\r\n      PureFieldWithValueCheck(\"MC_EWMAHisVol\", tableColList.MC_EWMAHisVol.text, 140, 2, \"MC_EWMAHisVol\" in hideColState ? hideColState[\"MC_EWMAHisVol\"] : tableColList['MC_EWMAHisVol'].hide),\r\n      PureFieldWithValueCheck(\"BT_EWMAHisVol\", tableColList.BT_EWMAHisVol.text, 140, 2, \"BT_EWMAHisVol\" in hideColState ? hideColState[\"BT_EWMAHisVol\"] : tableColList['BT_EWMAHisVol'].hide),\r\n      {\r\n        field: 'MCChart',\r\n        headerName: tableColList.MCChart.text,\r\n        width: 120,\r\n        renderCell: (params) => (\r\n          <IconButton\r\n            size=\"small\"\r\n            aria-haspopup=\"true\"\r\n            onClick={() => {\r\n              loadingAnimeRef.current.setLoading(true)\r\n              let iteration = 50\r\n              const query_string = '/stock/price-simulation-by-mc?symbol=' + params.row['symbol'] + '&iteration=' + iteration + '&mu=0&vol=' + \r\n              params.row['EWMAHisVol'] + '&days=' + workdayCount(moment(new Date().toISOString().split('T')[0]), moment(params.row['expiryDate']))\r\n              Promise.all([\r\n                GetDataByFetchObj(query_string, FetchNornFinanceAPIServerRef.current.server),\r\n              ]).then((allResponses) => {\r\n                console.log(allResponses)\r\n                if (allResponses.length === 1 && allResponses[0] !== null) {\r\n                  let chartData = []\r\n                  let cost = params.row['kind'] === 1 ? params.row['strike'] + params.row['lastPrice'] : params.row['strike'] - params.row['lastPrice']\r\n                  let info = {'symbol': params.row['symbol'], 'strike': params.row['strike'], 'cost': cost}\r\n                  allResponses[0]['mean'].forEach((mean_point, mean_index) => {\r\n                    let d = {'Mean': parseInt(mean_point * 100, 10) / 100.0, 'Name': 'Day' + mean_index}\r\n                    allResponses[0]['data'].forEach((data_points, data_i) => {\r\n                      d['Path-'+String(data_i).padStart(2, '0')] =  parseInt(data_points[mean_index] * 100, 10) / 100.0\r\n                    })\r\n                    chartData.push(d)\r\n                  })\r\n                  console.log(chartData)\r\n                  modalWindowRef.current.popModalWindow(<MonteCarloChart data={chartData} iteration={iteration} info={info}/>)\r\n                } else {\r\n                  console.error(\"Call simulation api failed\")\r\n                  modalWindowRef.current.popModalWindow(<div>Call simulation api failed</div>)\r\n                }\r\n                loadingAnimeRef.current.setLoading(false)\r\n              }).catch(() => {\r\n                console.error(\"Call simulation api failed...\")\r\n                modalWindowRef.current.popModalWindow(<div>Call simulation api failed...</div>)\r\n                loadingAnimeRef.current.setLoading(false)\r\n              })\r\n            }}\r\n          >\r\n            <BarChartSharpIcon color=\"primary\" style={{ fontSize: 40 }} />\r\n          </IconButton>\r\n        ),\r\n        hide: 'MCChart' in  hideColState? hideColState['MCChart'] : tableColList['MCChart'].hide\r\n      },\r\n    ]\r\n  }\r\n\r\n\r\n  const fetchOptionsData = useFetch({ cachePolicy: 'no-cache' })\r\n\r\n  const renderTable = (resp) => {\r\n    // [{\"symbol\":\"A\",\"stockPrice\":149.50999450683594,\"EWMA_historicalVolatility\":0.2519420533670158,\"contracts\":[{\"expiryDate\":\"2022-01-21\",\"calls\":[{\"lastTradeDate\":\"2022-01-12\",\"strike\":155.0,\"lastPrice\":0.32,\"bid\":0.35,\"ask\":0.5,\"change\":0.049999982,\"percentChange\":18.51851,\"volume\":30,\"openInterest\":721,\"impliedVolatility\":0.22461712890624996,\"valuationData\":{\"BSM_EWMAHisVol\":0.7042894690005248,\"MC_EWMAHisVol\":0.70279983534146,\"BT_EWMAHisVol\":0.7046023394736802}}],\"puts\":[]}]}\r\n    var calls = []\r\n    var puts = []\r\n    resp.forEach((data) => {\r\n      let symbol = data[\"symbol\"]\r\n      let stock_price = data[\"stockPrice\"]\r\n      let ewma_his_vol = data[\"EWMA_historicalVolatility\"]\r\n      data[\"contracts\"].forEach((contracts) => {\r\n        let expiry_date = contracts[\"expiryDate\"]\r\n        let extra_data_func = (calls_puts, kind) => {\r\n          let output = calls_puts.map((cp, index) => {\r\n            let v = cp[\"valuationData\"]\r\n            let o = {\r\n              id: index,\r\n              symbol: symbol,\r\n              stockPrice: stock_price,\r\n              EWMAHisVol: ewma_his_vol,\r\n              kind: kind,\r\n              expiryDate: expiry_date,\r\n              lastTradeDate: cp[\"lastTradeDate\"] !== undefined && cp[\"lastTradeDate\"] !== null && cp[\"lastTradeDate\"] !== '-' ? cp[\"lastTradeDate\"] : 0,\r\n              strike: cp[\"strike\"] !== undefined && cp[\"strike\"] !== null && cp[\"strike\"] !== '-' ? cp[\"strike\"] : -Number.MAX_VALUE,\r\n              lastPrice: cp[\"lastPrice\"] !== undefined && cp[\"lastPrice\"] !== null && cp[\"lastPrice\"] !== '-' ? cp[\"lastPrice\"] : -Number.MAX_VALUE,\r\n              bid: cp[\"bid\"] !== undefined && cp[\"bid\"] !== null && cp[\"bid\"] !== '-' ? cp[\"bid\"] : -Number.MAX_VALUE,\r\n              ask: cp[\"ask\"] !== undefined && cp[\"ask\"] !== null && cp[\"ask\"] !== '-' ? cp[\"ask\"] : -Number.MAX_VALUE,\r\n              change: cp[\"change\"] !== undefined && cp[\"change\"] !== null && cp[\"change\"] !== '-' ? cp[\"change\"] : -Number.MAX_VALUE,\r\n              percentChange: cp[\"percentChange\"] !== undefined && cp[\"percentChange\"] !== null && cp[\"percentChange\"] !== '-' ? cp[\"percentChange\"] / 100.0 : -Number.MAX_VALUE,\r\n              volume: cp[\"volume\"] !== undefined && cp[\"volume\"] !== null && cp[\"volume\"] !== '-' ? cp[\"volume\"] : -Number.MAX_VALUE,\r\n              openInterest: cp[\"openInterest\"] !== undefined && cp[\"openInterest\"] !== null && cp[\"openInterest\"] !== '-' ? cp[\"openInterest\"] : -Number.MAX_VALUE,\r\n              impliedVolatility: cp[\"impliedVolatility\"] !== undefined && cp[\"impliedVolatility\"] !== null && cp[\"impliedVolatility\"] !== '-' ? cp[\"impliedVolatility\"] : -Number.MAX_VALUE,\r\n              BSM_EWMAHisVol: v[\"BSM_EWMAHisVol\"] !== undefined && v[\"BSM_EWMAHisVol\"] !== null && v[\"BSM_EWMAHisVol\"] > 0 ? v[\"BSM_EWMAHisVol\"] : -Number.MAX_VALUE,\r\n              MC_EWMAHisVol: v[\"MC_EWMAHisVol\"] !== undefined && v[\"MC_EWMAHisVol\"] !== null && v[\"MC_EWMAHisVol\"] > 0 ? v[\"MC_EWMAHisVol\"] : -Number.MAX_VALUE,\r\n              BT_EWMAHisVol: v[\"BT_EWMAHisVol\"] !== undefined && v[\"BT_EWMAHisVol\"] !== null && v[\"BT_EWMAHisVol\"] > 0 ? v[\"BT_EWMAHisVol\"] : -Number.MAX_VALUE,\r\n              delta: v[\"delta\"] !== undefined && v[\"delta\"] !== null ? v[\"delta\"] : -Number.MAX_VALUE,\r\n              gamma: v[\"gamma\"] !== undefined && v[\"gamma\"] !== null ? v[\"gamma\"] : -Number.MAX_VALUE,\r\n              rho: v[\"rho\"] !== undefined && v[\"rho\"] !== null ? v[\"rho\"] : -Number.MAX_VALUE,\r\n              theta: v[\"theta\"] !== undefined && v[\"theta\"] !== null ? v[\"theta\"] : -Number.MAX_VALUE,\r\n              vega: v[\"vega\"] !== undefined && v[\"vega\"] !== null ? v[\"vega\"] : -Number.MAX_VALUE,\r\n              KellyCriterion_buy: v[\"KellyCriterion_buy\"] !== undefined && v[\"KellyCriterion_buy\"] !== null ? v[\"KellyCriterion_buy\"] : -Number.MAX_VALUE,\r\n              KellyCriterion_sell: v[\"KellyCriterion_sell\"] !== undefined && v[\"KellyCriterion_sell\"] !== null ? v[\"KellyCriterion_sell\"] : -Number.MAX_VALUE,\r\n              KellyCriterion_MU_0_buy: v[\"KellyCriterion_MU_0_buy\"] !== undefined && v[\"KellyCriterion_MU_0_buy\"] !== null ? v[\"KellyCriterion_MU_0_buy\"] : -Number.MAX_VALUE,\r\n              KellyCriterion_MU_0_sell: v[\"KellyCriterion_MU_0_sell\"] !== undefined && v[\"KellyCriterion_MU_0_sell\"] !== null ? v[\"KellyCriterion_MU_0_sell\"] : -Number.MAX_VALUE,\r\n            }\r\n            let cnt = 0\r\n            let sum = 0\r\n            if (o.BSM_EWMAHisVol > 0) {\r\n              cnt += 1\r\n              sum += o.BSM_EWMAHisVol\r\n            }\r\n            if (o.MC_EWMAHisVol > 0) {\r\n              cnt += 1\r\n              sum += o.MC_EWMAHisVol\r\n            }\r\n            if (o.BT_EWMAHisVol > 0) {\r\n              cnt += 1\r\n              sum += o.BT_EWMAHisVol\r\n            }\r\n            o[\"avgEWMA\"] = sum / cnt\r\n\r\n            o[\"priceBias\"] = -Number.MAX_VALUE\r\n            if (o.lastPrice != -Number.MAX_VALUE) {\r\n              o[\"priceBias\"] = Math.abs(o.lastPrice - o[\"avgEWMA\"]) / o.lastPrice\r\n            }\r\n\r\n            o[\"priceStrikeRatio\"] = -Number.MAX_VALUE\r\n            if (o.strike != -Number.MAX_VALUE && o.lastPrice != -Number.MAX_VALUE) {\r\n              o[\"priceStrikeRatio\"] = o.lastPrice / o.strike\r\n            }\r\n\r\n            o[\"priceStrikeYearRatio\"] = -Number.MAX_VALUE\r\n            if (o[\"priceStrikeRatio\"] != -Number.MAX_VALUE) {\r\n              let day_diff = Math.floor((Date.parse(expiry_date) - Date.parse(new Date().toISOString().slice(0, 10))) / 86400000)\r\n              o[\"priceStrikeYearRatio\"] = o[\"priceStrikeRatio\"] * 365.0 / day_diff\r\n            }\r\n\r\n            o[\"distanceRatio\"] = -Number.MAX_VALUE\r\n            if (o.strike != -Number.MAX_VALUE && o.stockPrice != -Number.MAX_VALUE) {\r\n              o[\"distanceRatio\"] = Math.abs(o.stockPrice - o.strike) / o.stockPrice\r\n            }\r\n\r\n            return o\r\n          })\r\n          return output\r\n        }\r\n        calls = calls.concat(extra_data_func(contracts[\"calls\"], 1))\r\n        puts = puts.concat(extra_data_func(contracts[\"puts\"], -1))\r\n      })\r\n    })\r\n\r\n    // reset id\r\n    calls.forEach((d, i) => {\r\n      calls[i].id = i\r\n    });\r\n    puts.forEach((d, i) => {\r\n      puts[i].id = i\r\n    });\r\n\r\n    console.log(calls)\r\n    setCallsData(calls)\r\n    console.log(puts)\r\n    setPutsData(puts)\r\n  }\r\n\r\n  const renderOptionsData = (file_name) => {\r\n    loadingAnimeRef.current.setLoading(true)\r\n    Promise.all([\r\n      GetDataByFetchObj('/norn-data/options/' + file_name + '.json', fetchOptionsData),\r\n    ]).then((allResponses) => {\r\n      console.log(allResponses)\r\n      if (allResponses.length === 1 && allResponses[0] !== null) {\r\n        renderTable(allResponses[0])\r\n      } else {\r\n        console.error(\"renderOptionsData some data failed\")\r\n        modalWindowRef.current.popModalWindow(<div>Get some data failed...</div>)\r\n      }\r\n      loadingAnimeRef.current.setLoading(false)\r\n    }).catch(() => {\r\n      console.error(\"renderOptionsData failed\")\r\n      modalWindowRef.current.popModalWindow(<div>Get data failed...</div>)\r\n      loadingAnimeRef.current.setLoading(false)\r\n    })\r\n  }\r\n\r\n  const refreshData = (name) => {\r\n    if (name.startsWith('self_query')) {\r\n      setDisplayQuery(true)\r\n      setCallsData([])\r\n      setPutsData([])\r\n      loadingAnimeRef.current.setLoading(false)\r\n    } else {\r\n      setDisplayQuery(false)\r\n      renderOptionsData(name)\r\n    }\r\n  }\r\n  const [callsData, setCallsData] = useState([])\r\n  const [putsData, setPutsData] = useState([])\r\n  const [hideColState, setHideColState] = useState({})\r\n  const [arg, setArg] = useState(0)\r\n  const [displayQuery, setDisplayQuery] = useState(false)\r\n  const [ws, setWs] = useState(null)\r\n\r\n\r\n\r\n  const queryParameterRef = useRef([])\r\n  SelfQuery_Def.parameters.forEach((value, index) => {\r\n    queryParameterRef.current[index] = createRef()\r\n    queryParameterRef.current[index].current = { value: value.val }\r\n  })\r\n  const queryParameterCurrentRef = useRef(null)\r\n\r\n  useEffect(() => {\r\n    // componentDidMount is here!\r\n    // componentDidUpdate is here!\r\n    refreshData(Options_Def[0].name)\r\n\r\n    return () => {\r\n      // componentWillUnmount is here!\r\n    }\r\n  }, [])\r\n\r\n  useInterval(() => {\r\n    if (ws && ws.readyState === WebSocket.OPEN) {\r\n      ws.send(\"\") // heartbeat\r\n      console.log(\"heartbeat\")\r\n    }\r\n  }, ws ? 3000 : null)\r\n\r\n  useEffect(() => {\r\n    if (ws) {\r\n      ws.onopen = () => {\r\n        loadingAnimeRef.current.setLoading(true)\r\n        console.log('WebSocket Connected')\r\n      }\r\n      ws.onmessage = (e) => {\r\n        const message = JSON.parse(e.data)\r\n        console.log(message)\r\n        renderTable([message])\r\n        loadingAnimeRef.current.setLoading(false)\r\n        setWs(null)\r\n      }\r\n    }\r\n    return () => {\r\n    }\r\n  }, [ws])\r\n  \r\n  return (\r\n    <div className={commonStyle.defaultFont + ' ' + optionsStyle.container}>\r\n      <div key={shortid.generate()} >\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={6}>\r\n            <FormControl size=\"small\" variant=\"outlined\" className={optionsStyle.optionsTableSelect}>\r\n              <InputLabel htmlFor=\"arg-select\">{'Options Valuation'}</InputLabel>\r\n              <Select\r\n                native\r\n                value={arg}\r\n                displayEmpty\r\n                onChange={(event) => {\r\n                  setArg(event.target.value)\r\n                  refreshData(Options_Def[event.target.value].name)\r\n                }}\r\n                label={'Options Valuation'}\r\n              >\r\n                {\r\n                  Options_Def.map((value, index) => {\r\n                    return <option key={shortid.generate()} index={index} value={index}>{value.display_name}</option>\r\n                  })\r\n                }\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n        <div className={optionsStyle.queryPannel} style={{ display: displayQuery ? 'block' : 'none' }}>\r\n          <div className={optionsStyle.parameterTitle}>\r\n            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n              {'Query Parameters'}\r\n              <NoMaxWidthTooltip arrow title={<span style={{ whiteSpace: 'pre-line', lineHeight: '20px', textAlign: 'center'}}>{QueryNote}</span>} >\r\n                <IconButton onClick={() => window.open(NornFinanceAPIServerGithub, \"_blank\")}>\r\n                  <InfoIcon color=\"action\"/>\r\n                </IconButton>\r\n              </NoMaxWidthTooltip>\r\n            </Typography>\r\n          </div>\r\n          <div className={optionsStyle.parameterBlock}>\r\n            <Grid container spacing={2}>\r\n              <ParameterNodesField queryParameterRef={queryParameterRef} queryParameterCurrentRef={queryParameterCurrentRef}/>\r\n              <Grid item md={2} xs={12} >\r\n                <Box display=\"flex\" justifyContent=\"flex-end\">\r\n                  <ThemeProvider theme={createTheme({ palette: { primary: blue } })}>\r\n                    <Button className={isMobile ? optionsStyle.queryBtnMobile : optionsStyle.queryBtn} variant=\"contained\" color=\"primary\" startIcon={<SearchIcon />} onClick={() => {\r\n                      queryParameterCurrentRef.current = []\r\n                      let args = SelfQuery_Def.parameters.reduce((accumulator, currentValue, currentIndex) => {\r\n                        accumulator[currentValue.name] = queryParameterRef.current[currentIndex].current.value\r\n                        queryParameterCurrentRef.current.push(accumulator[currentValue.name])\r\n                        return accumulator\r\n                      }, {})\r\n                      console.log(args)\r\n                      let query_string = \"/ws/option/quote-valuation?\" + Object.keys(args).map(function (key) { return key + \"=\" + args[key] }).join(\"&\")\r\n                      setWs(new WebSocket(\"wss://\" + NornFinanceAPIServerDomain + query_string))\r\n                    }}>{'Query Now'}</Button>\r\n                  </ThemeProvider>\r\n                </Box>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </div>\r\n        <div className={optionsStyle.table}>\r\n          <DataGrid rows={callsData} columns={genTableColTemplate()} rowsPerPageOptions={[]} autoPageSize={true} components={{ NoRowsOverlay: DefaultDataGridTable, }} disableSelectionOnClick onColumnVisibilityChange={(param) => {\r\n            let tempHideColState = hideColState\r\n            tempHideColState[param['field']] = !param['isVisible']\r\n            setHideColState(tempHideColState)\r\n          }} initialState={{\r\n            filter: {\r\n              filterModel: {\r\n                items: [{ columnField: 'lastPrice', operatorValue: '>', value: 0.1 }],\r\n              },\r\n            },\r\n            sorting: {\r\n              sortModel: [{ field: 'priceBias', sort: 'desc' }],\r\n            },\r\n          }}/>\r\n        </div>\r\n        <div className={optionsStyle.table}>\r\n          <DataGrid rows={putsData} columns={genTableColTemplate()} rowsPerPageOptions={[]} autoPageSize={true} components={{ NoRowsOverlay: DefaultDataGridTable, }} disableSelectionOnClick onColumnVisibilityChange={(param) => {\r\n            let tempHideColState = hideColState\r\n            tempHideColState[param['field']] = !param['isVisible']\r\n            setHideColState(tempHideColState)\r\n          }} initialState={{\r\n            filter: {\r\n              filterModel: {\r\n                items: [{ columnField: 'lastPrice', operatorValue: '>', value: 0.1 }],\r\n              },\r\n            },\r\n            sorting: {\r\n              sortModel: [{ field: 'priceBias', sort: 'desc' }],\r\n            },\r\n          }}/>\r\n        </div>\r\n      </div>\r\n      <ModalWindow modalWindowRef={modalWindowRef} />\r\n      <FetchNornFinanceAPIServer FetchNornFinanceAPIServerRef={FetchNornFinanceAPIServerRef}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Options\r\n","import React, { useRef } from 'react'\r\nimport { StylesProvider } from '@mui/styles'\r\n\r\nimport Layout from '../components/layout'\r\nimport Options from '../components/options/options'\r\nimport LoadingAnime from '../components/loadingAnime'\r\nimport SEO from '../components/seo'\r\n\r\nconst OptionsPage = () => {\r\n\r\n  const loadingAnimeRef = useRef({\r\n    getLoading: null,\r\n    setLoading: null\r\n  })\r\n\r\n  return (\r\n    <StylesProvider injectFirst>\r\n      <SEO />\r\n      <Layout >\r\n        <Options loadingAnimeRef={loadingAnimeRef} />\r\n      </Layout>\r\n      <LoadingAnime loadingAnimeRef={loadingAnimeRef} />\r\n    </StylesProvider>\r\n  )\r\n}\r\n\r\nexport default OptionsPage\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M5 9.2h3V19H5V9.2zM10.6 5h2.8v14h-2.8V5zm5.6 8H19v6h-2.8v-6z\"\n}), 'BarChartSharp');\n\nexports.default = _default;","import React, { PureComponent } from 'react'\r\nimport shortid from 'shortid'\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  Label,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ReferenceLine,\r\n  ResponsiveContainer\r\n} from 'recharts'\r\n\r\n\r\nclass CustomizedLabel extends PureComponent {\r\n  render() {\r\n    const { x, y, stroke, value, fontSize } = this.props;\r\n\r\n    return (\r\n      <text x={x} y={y} dy={-4} fill={stroke} fontSize={fontSize} textAnchor=\"middle\">\r\n        {value}\r\n      </text>\r\n    );\r\n  }\r\n}\r\n\r\nconst MonteCarloChart = ({ data, iteration, info, show_mean_label=true, modal_mode=true }) => {\r\n\r\n  const dataLines = Array(iteration).fill(0).map((value, index) => {\r\n    return <Line key={shortid.generate()}  type=\"monotone\" dataKey={'Path-'+String(index).padStart(2, '0')} stroke={'#d3d3d3'} dot={false} strokeWidth={2}/>\r\n  })\r\n  // console.log(dataLines)\r\n  const optionReferenceLines = \"strike\" in info && \"cost\" in info ? \r\n  <>          \r\n    <ReferenceLine y={info.strike} label={{ position: 'insideBottomLeft',  value: 'Strike: ' + info.strike, fill: 'red', fontSize: 14 }} stroke=\"red\" strokeDasharray=\"3 3\" />\r\n    <ReferenceLine y={info.cost} label={{ position: 'insideTopLeft',  value: 'Cost: ' + info.cost, fill: 'blue', fontSize: 14 }} stroke=\"blue\" strokeDasharray=\"3 3\" />\r\n  </> : <></>\r\n\r\n  const xAxisLabel = \"symbol\" in info ? \r\n  <Label value={\"Symbol: \" + info.symbol} offset={5} position=\"bottom\" fill='#8884d8' fontSize={16} /> : <></>\r\n\r\n  const chartStyle = modal_mode ? { width: (window.innerWidth - 100) + 'px', height: (window.innerHeight - 100) + 'px', maxWidth: '1200px', maxHeight: '600px' } : {width: '100%', height: '100%'}\r\n\r\n  return (\r\n    <div style={chartStyle}>\r\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n        <LineChart\r\n          data={data}\r\n          margin={{\r\n            top: 5,\r\n            right: 30,\r\n            left: 20,\r\n            bottom: 20,\r\n          }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"Name\">\r\n            {xAxisLabel}\r\n          </XAxis>\r\n          <YAxis domain={['auto', 'auto']} />\r\n          <Tooltip itemSorter={item => item.name}/>\r\n          {dataLines}\r\n          <Line type=\"monotone\" dataKey=\"Mean\" stroke=\"#FF8042\" strokeWidth={3} label={show_mean_label ? <CustomizedLabel stroke={\"#FF8042\"} fontSize={14}/> : <></>} />\r\n          {optionReferenceLines}\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default MonteCarloChart\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\"\n}), 'Info');\n\nexports.default = _default;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"options-module--container--1Ap9h\",\"optionsTableSelect\":\"options-module--optionsTableSelect--3r0T_\",\"queryPannel\":\"options-module--queryPannel--3-uHO\",\"parameterTitle\":\"options-module--parameterTitle--2fg8B\",\"parameterBlock\":\"options-module--parameterBlock--35kmB\",\"valueText\":\"options-module--valueText--3rMRe\",\"queryBtn\":\"options-module--queryBtn--2FZj5\",\"queryBtnMobile\":\"options-module--queryBtnMobile--3zTJs\",\"table\":\"options-module--table--3kRfA\"};"],"sourceRoot":""}